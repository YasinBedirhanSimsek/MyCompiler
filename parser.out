Grammar:

Rule 0     S' -> STATEMENT
Rule 1     STATEMENT -> CONDITIONAL
Rule 2     STATEMENT -> LOOP
Rule 3     STATEMENT -> EXPRESSION
Rule 4     STATEMENT -> ASSIGNMENT
Rule 5     ASSIGNMENT -> ID ASSIGN EXPRESSION COMMA ASSIGNMENT
Rule 6     ASSIGNMENT -> ID ASSIGN EXPRESSION
Rule 7     LOOP -> WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY
Rule 8     CONDITIONAL -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY ELSE CONDITIONAL
Rule 9     CONDITIONAL -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY ELSE LCURLY STATEMENT RCURLY
Rule 10    CONDITIONAL -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY
Rule 11    EXPRESSION -> EXPRESSION IS_NOT_EQUAL EXPRESSION  [precedence=left, level=1]
Rule 12    EXPRESSION -> EXPRESSION IS_EQUAL EXPRESSION  [precedence=left, level=1]
Rule 13    EXPRESSION -> EXPRESSION EXPONENT EXPRESSION  [precedence=right, level=5]
Rule 14    EXPRESSION -> EXPRESSION MOD EXPRESSION  [precedence=left, level=3]
Rule 15    EXPRESSION -> EXPRESSION DIVIDE EXPRESSION  [precedence=left, level=3]
Rule 16    EXPRESSION -> EXPRESSION TIMES EXPRESSION  [precedence=left, level=3]
Rule 17    EXPRESSION -> EXPRESSION MINUS EXPRESSION  [precedence=left, level=2]
Rule 18    EXPRESSION -> EXPRESSION PLUS EXPRESSION  [precedence=left, level=2]
Rule 19    EXPRESSION -> MINUS EXPRESSION  [precedence=right, level=4]
Rule 20    EXPRESSION -> LPAREN EXPRESSION RPAREN
Rule 21    EXPRESSION -> ID
Rule 22    EXPRESSION -> NUMBER

Unused terminals:

    BITWISE_OR
    AND
    LOWER_THAN
    GREATER_THAN_EQ
    GREATER_THAN
    LOWER_THAN_EQ
    OR
    BITWISE_AND

Terminals, with rules where they appear:

AND                  : 
ASSIGN               : 5 6
BITWISE_AND          : 
BITWISE_OR           : 
COMMA                : 5
DIVIDE               : 15
ELSE                 : 8 9
EXPONENT             : 13
GREATER_THAN         : 
GREATER_THAN_EQ      : 
ID                   : 5 6 21
IF                   : 8 9 10
IS_EQUAL             : 12
IS_NOT_EQUAL         : 11
LCURLY               : 7 8 9 9 10
LOWER_THAN           : 
LOWER_THAN_EQ        : 
LPAREN               : 7 8 9 10 20
MINUS                : 17 19
MOD                  : 14
NUMBER               : 22
OR                   : 
PLUS                 : 18
RCURLY               : 7 8 9 9 10
RPAREN               : 7 8 9 10 20
TIMES                : 16
WHILE                : 7
error                : 

Nonterminals, with rules where they appear:

ASSIGNMENT           : 4 5
CONDITIONAL          : 1 8
EXPRESSION           : 3 5 6 7 8 9 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 20
LOOP                 : 2
STATEMENT            : 7 8 9 9 10 0


state 0

    (0) S' -> . STATEMENT
    (1) STATEMENT -> . CONDITIONAL
    (2) STATEMENT -> . LOOP
    (3) STATEMENT -> . EXPRESSION
    (4) STATEMENT -> . ASSIGNMENT
    (8) CONDITIONAL -> . IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY ELSE CONDITIONAL
    (9) CONDITIONAL -> . IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY ELSE LCURLY STATEMENT RCURLY
    (10) CONDITIONAL -> . IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY
    (7) LOOP -> . WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY
    (11) EXPRESSION -> . EXPRESSION IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> . EXPRESSION IS_EQUAL EXPRESSION
    (13) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (14) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (15) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (16) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (18) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (19) EXPRESSION -> . MINUS EXPRESSION
    (20) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (21) EXPRESSION -> . ID
    (22) EXPRESSION -> . NUMBER
    (5) ASSIGNMENT -> . ID ASSIGN EXPRESSION COMMA ASSIGNMENT
    (6) ASSIGNMENT -> . ID ASSIGN EXPRESSION
    IF              shift and go to state 6
    WHILE           shift and go to state 8
    MINUS           shift and go to state 9
    LPAREN          shift and go to state 7
    ID              shift and go to state 10
    NUMBER          shift and go to state 11

    STATEMENT                      shift and go to state 1
    CONDITIONAL                    shift and go to state 2
    LOOP                           shift and go to state 3
    EXPRESSION                     shift and go to state 4
    ASSIGNMENT                     shift and go to state 5

state 1

    (0) S' -> STATEMENT .


state 2

    (1) STATEMENT -> CONDITIONAL .
    $end            reduce using rule 1 (STATEMENT -> CONDITIONAL .)
    RCURLY          reduce using rule 1 (STATEMENT -> CONDITIONAL .)


state 3

    (2) STATEMENT -> LOOP .
    $end            reduce using rule 2 (STATEMENT -> LOOP .)
    RCURLY          reduce using rule 2 (STATEMENT -> LOOP .)


state 4

    (3) STATEMENT -> EXPRESSION .
    (11) EXPRESSION -> EXPRESSION . IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> EXPRESSION . IS_EQUAL EXPRESSION
    (13) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (14) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (15) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (16) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (18) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    $end            reduce using rule 3 (STATEMENT -> EXPRESSION .)
    RCURLY          reduce using rule 3 (STATEMENT -> EXPRESSION .)
    IS_NOT_EQUAL    shift and go to state 12
    IS_EQUAL        shift and go to state 13
    EXPONENT        shift and go to state 14
    MOD             shift and go to state 15
    DIVIDE          shift and go to state 16
    TIMES           shift and go to state 17
    MINUS           shift and go to state 18
    PLUS            shift and go to state 19


state 5

    (4) STATEMENT -> ASSIGNMENT .
    $end            reduce using rule 4 (STATEMENT -> ASSIGNMENT .)
    RCURLY          reduce using rule 4 (STATEMENT -> ASSIGNMENT .)


state 6

    (8) CONDITIONAL -> IF . LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY ELSE CONDITIONAL
    (9) CONDITIONAL -> IF . LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY ELSE LCURLY STATEMENT RCURLY
    (10) CONDITIONAL -> IF . LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY
    LPAREN          shift and go to state 20


state 7

    (20) EXPRESSION -> LPAREN . EXPRESSION RPAREN
    (11) EXPRESSION -> . EXPRESSION IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> . EXPRESSION IS_EQUAL EXPRESSION
    (13) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (14) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (15) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (16) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (18) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (19) EXPRESSION -> . MINUS EXPRESSION
    (20) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (21) EXPRESSION -> . ID
    (22) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 9
    LPAREN          shift and go to state 7
    ID              shift and go to state 22
    NUMBER          shift and go to state 11

    EXPRESSION                     shift and go to state 21

state 8

    (7) LOOP -> WHILE . LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY
    LPAREN          shift and go to state 23


state 9

    (19) EXPRESSION -> MINUS . EXPRESSION
    (11) EXPRESSION -> . EXPRESSION IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> . EXPRESSION IS_EQUAL EXPRESSION
    (13) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (14) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (15) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (16) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (18) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (19) EXPRESSION -> . MINUS EXPRESSION
    (20) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (21) EXPRESSION -> . ID
    (22) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 9
    LPAREN          shift and go to state 7
    ID              shift and go to state 22
    NUMBER          shift and go to state 11

    EXPRESSION                     shift and go to state 24

state 10

    (21) EXPRESSION -> ID .
    (5) ASSIGNMENT -> ID . ASSIGN EXPRESSION COMMA ASSIGNMENT
    (6) ASSIGNMENT -> ID . ASSIGN EXPRESSION
    IS_NOT_EQUAL    reduce using rule 21 (EXPRESSION -> ID .)
    IS_EQUAL        reduce using rule 21 (EXPRESSION -> ID .)
    EXPONENT        reduce using rule 21 (EXPRESSION -> ID .)
    MOD             reduce using rule 21 (EXPRESSION -> ID .)
    DIVIDE          reduce using rule 21 (EXPRESSION -> ID .)
    TIMES           reduce using rule 21 (EXPRESSION -> ID .)
    MINUS           reduce using rule 21 (EXPRESSION -> ID .)
    PLUS            reduce using rule 21 (EXPRESSION -> ID .)
    $end            reduce using rule 21 (EXPRESSION -> ID .)
    RCURLY          reduce using rule 21 (EXPRESSION -> ID .)
    ASSIGN          shift and go to state 25


state 11

    (22) EXPRESSION -> NUMBER .
    IS_NOT_EQUAL    reduce using rule 22 (EXPRESSION -> NUMBER .)
    IS_EQUAL        reduce using rule 22 (EXPRESSION -> NUMBER .)
    EXPONENT        reduce using rule 22 (EXPRESSION -> NUMBER .)
    MOD             reduce using rule 22 (EXPRESSION -> NUMBER .)
    DIVIDE          reduce using rule 22 (EXPRESSION -> NUMBER .)
    TIMES           reduce using rule 22 (EXPRESSION -> NUMBER .)
    MINUS           reduce using rule 22 (EXPRESSION -> NUMBER .)
    PLUS            reduce using rule 22 (EXPRESSION -> NUMBER .)
    $end            reduce using rule 22 (EXPRESSION -> NUMBER .)
    RPAREN          reduce using rule 22 (EXPRESSION -> NUMBER .)
    COMMA           reduce using rule 22 (EXPRESSION -> NUMBER .)
    RCURLY          reduce using rule 22 (EXPRESSION -> NUMBER .)


state 12

    (11) EXPRESSION -> EXPRESSION IS_NOT_EQUAL . EXPRESSION
    (11) EXPRESSION -> . EXPRESSION IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> . EXPRESSION IS_EQUAL EXPRESSION
    (13) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (14) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (15) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (16) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (18) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (19) EXPRESSION -> . MINUS EXPRESSION
    (20) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (21) EXPRESSION -> . ID
    (22) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 9
    LPAREN          shift and go to state 7
    ID              shift and go to state 22
    NUMBER          shift and go to state 11

    EXPRESSION                     shift and go to state 26

state 13

    (12) EXPRESSION -> EXPRESSION IS_EQUAL . EXPRESSION
    (11) EXPRESSION -> . EXPRESSION IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> . EXPRESSION IS_EQUAL EXPRESSION
    (13) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (14) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (15) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (16) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (18) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (19) EXPRESSION -> . MINUS EXPRESSION
    (20) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (21) EXPRESSION -> . ID
    (22) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 9
    LPAREN          shift and go to state 7
    ID              shift and go to state 22
    NUMBER          shift and go to state 11

    EXPRESSION                     shift and go to state 27

state 14

    (13) EXPRESSION -> EXPRESSION EXPONENT . EXPRESSION
    (11) EXPRESSION -> . EXPRESSION IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> . EXPRESSION IS_EQUAL EXPRESSION
    (13) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (14) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (15) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (16) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (18) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (19) EXPRESSION -> . MINUS EXPRESSION
    (20) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (21) EXPRESSION -> . ID
    (22) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 9
    LPAREN          shift and go to state 7
    ID              shift and go to state 22
    NUMBER          shift and go to state 11

    EXPRESSION                     shift and go to state 28

state 15

    (14) EXPRESSION -> EXPRESSION MOD . EXPRESSION
    (11) EXPRESSION -> . EXPRESSION IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> . EXPRESSION IS_EQUAL EXPRESSION
    (13) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (14) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (15) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (16) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (18) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (19) EXPRESSION -> . MINUS EXPRESSION
    (20) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (21) EXPRESSION -> . ID
    (22) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 9
    LPAREN          shift and go to state 7
    ID              shift and go to state 22
    NUMBER          shift and go to state 11

    EXPRESSION                     shift and go to state 29

state 16

    (15) EXPRESSION -> EXPRESSION DIVIDE . EXPRESSION
    (11) EXPRESSION -> . EXPRESSION IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> . EXPRESSION IS_EQUAL EXPRESSION
    (13) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (14) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (15) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (16) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (18) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (19) EXPRESSION -> . MINUS EXPRESSION
    (20) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (21) EXPRESSION -> . ID
    (22) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 9
    LPAREN          shift and go to state 7
    ID              shift and go to state 22
    NUMBER          shift and go to state 11

    EXPRESSION                     shift and go to state 30

state 17

    (16) EXPRESSION -> EXPRESSION TIMES . EXPRESSION
    (11) EXPRESSION -> . EXPRESSION IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> . EXPRESSION IS_EQUAL EXPRESSION
    (13) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (14) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (15) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (16) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (18) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (19) EXPRESSION -> . MINUS EXPRESSION
    (20) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (21) EXPRESSION -> . ID
    (22) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 9
    LPAREN          shift and go to state 7
    ID              shift and go to state 22
    NUMBER          shift and go to state 11

    EXPRESSION                     shift and go to state 31

state 18

    (17) EXPRESSION -> EXPRESSION MINUS . EXPRESSION
    (11) EXPRESSION -> . EXPRESSION IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> . EXPRESSION IS_EQUAL EXPRESSION
    (13) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (14) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (15) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (16) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (18) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (19) EXPRESSION -> . MINUS EXPRESSION
    (20) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (21) EXPRESSION -> . ID
    (22) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 9
    LPAREN          shift and go to state 7
    ID              shift and go to state 22
    NUMBER          shift and go to state 11

    EXPRESSION                     shift and go to state 32

state 19

    (18) EXPRESSION -> EXPRESSION PLUS . EXPRESSION
    (11) EXPRESSION -> . EXPRESSION IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> . EXPRESSION IS_EQUAL EXPRESSION
    (13) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (14) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (15) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (16) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (18) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (19) EXPRESSION -> . MINUS EXPRESSION
    (20) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (21) EXPRESSION -> . ID
    (22) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 9
    LPAREN          shift and go to state 7
    ID              shift and go to state 22
    NUMBER          shift and go to state 11

    EXPRESSION                     shift and go to state 33

state 20

    (8) CONDITIONAL -> IF LPAREN . EXPRESSION RPAREN LCURLY STATEMENT RCURLY ELSE CONDITIONAL
    (9) CONDITIONAL -> IF LPAREN . EXPRESSION RPAREN LCURLY STATEMENT RCURLY ELSE LCURLY STATEMENT RCURLY
    (10) CONDITIONAL -> IF LPAREN . EXPRESSION RPAREN LCURLY STATEMENT RCURLY
    (11) EXPRESSION -> . EXPRESSION IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> . EXPRESSION IS_EQUAL EXPRESSION
    (13) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (14) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (15) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (16) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (18) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (19) EXPRESSION -> . MINUS EXPRESSION
    (20) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (21) EXPRESSION -> . ID
    (22) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 9
    LPAREN          shift and go to state 7
    ID              shift and go to state 22
    NUMBER          shift and go to state 11

    EXPRESSION                     shift and go to state 34

state 21

    (20) EXPRESSION -> LPAREN EXPRESSION . RPAREN
    (11) EXPRESSION -> EXPRESSION . IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> EXPRESSION . IS_EQUAL EXPRESSION
    (13) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (14) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (15) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (16) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (18) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    RPAREN          shift and go to state 35
    IS_NOT_EQUAL    shift and go to state 12
    IS_EQUAL        shift and go to state 13
    EXPONENT        shift and go to state 14
    MOD             shift and go to state 15
    DIVIDE          shift and go to state 16
    TIMES           shift and go to state 17
    MINUS           shift and go to state 18
    PLUS            shift and go to state 19


state 22

    (21) EXPRESSION -> ID .
    RPAREN          reduce using rule 21 (EXPRESSION -> ID .)
    IS_NOT_EQUAL    reduce using rule 21 (EXPRESSION -> ID .)
    IS_EQUAL        reduce using rule 21 (EXPRESSION -> ID .)
    EXPONENT        reduce using rule 21 (EXPRESSION -> ID .)
    MOD             reduce using rule 21 (EXPRESSION -> ID .)
    DIVIDE          reduce using rule 21 (EXPRESSION -> ID .)
    TIMES           reduce using rule 21 (EXPRESSION -> ID .)
    MINUS           reduce using rule 21 (EXPRESSION -> ID .)
    PLUS            reduce using rule 21 (EXPRESSION -> ID .)
    $end            reduce using rule 21 (EXPRESSION -> ID .)
    COMMA           reduce using rule 21 (EXPRESSION -> ID .)
    RCURLY          reduce using rule 21 (EXPRESSION -> ID .)


state 23

    (7) LOOP -> WHILE LPAREN . EXPRESSION RPAREN LCURLY STATEMENT RCURLY
    (11) EXPRESSION -> . EXPRESSION IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> . EXPRESSION IS_EQUAL EXPRESSION
    (13) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (14) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (15) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (16) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (18) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (19) EXPRESSION -> . MINUS EXPRESSION
    (20) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (21) EXPRESSION -> . ID
    (22) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 9
    LPAREN          shift and go to state 7
    ID              shift and go to state 22
    NUMBER          shift and go to state 11

    EXPRESSION                     shift and go to state 36

state 24

    (19) EXPRESSION -> MINUS EXPRESSION .
    (11) EXPRESSION -> EXPRESSION . IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> EXPRESSION . IS_EQUAL EXPRESSION
    (13) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (14) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (15) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (16) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (18) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    IS_NOT_EQUAL    reduce using rule 19 (EXPRESSION -> MINUS EXPRESSION .)
    IS_EQUAL        reduce using rule 19 (EXPRESSION -> MINUS EXPRESSION .)
    MOD             reduce using rule 19 (EXPRESSION -> MINUS EXPRESSION .)
    DIVIDE          reduce using rule 19 (EXPRESSION -> MINUS EXPRESSION .)
    TIMES           reduce using rule 19 (EXPRESSION -> MINUS EXPRESSION .)
    MINUS           reduce using rule 19 (EXPRESSION -> MINUS EXPRESSION .)
    PLUS            reduce using rule 19 (EXPRESSION -> MINUS EXPRESSION .)
    $end            reduce using rule 19 (EXPRESSION -> MINUS EXPRESSION .)
    RPAREN          reduce using rule 19 (EXPRESSION -> MINUS EXPRESSION .)
    COMMA           reduce using rule 19 (EXPRESSION -> MINUS EXPRESSION .)
    RCURLY          reduce using rule 19 (EXPRESSION -> MINUS EXPRESSION .)
    EXPONENT        shift and go to state 14


state 25

    (5) ASSIGNMENT -> ID ASSIGN . EXPRESSION COMMA ASSIGNMENT
    (6) ASSIGNMENT -> ID ASSIGN . EXPRESSION
    (11) EXPRESSION -> . EXPRESSION IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> . EXPRESSION IS_EQUAL EXPRESSION
    (13) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (14) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (15) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (16) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (18) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (19) EXPRESSION -> . MINUS EXPRESSION
    (20) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (21) EXPRESSION -> . ID
    (22) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 9
    LPAREN          shift and go to state 7
    ID              shift and go to state 22
    NUMBER          shift and go to state 11

    EXPRESSION                     shift and go to state 37

state 26

    (11) EXPRESSION -> EXPRESSION IS_NOT_EQUAL EXPRESSION .
    (11) EXPRESSION -> EXPRESSION . IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> EXPRESSION . IS_EQUAL EXPRESSION
    (13) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (14) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (15) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (16) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (18) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    IS_NOT_EQUAL    reduce using rule 11 (EXPRESSION -> EXPRESSION IS_NOT_EQUAL EXPRESSION .)
    IS_EQUAL        reduce using rule 11 (EXPRESSION -> EXPRESSION IS_NOT_EQUAL EXPRESSION .)
    $end            reduce using rule 11 (EXPRESSION -> EXPRESSION IS_NOT_EQUAL EXPRESSION .)
    RPAREN          reduce using rule 11 (EXPRESSION -> EXPRESSION IS_NOT_EQUAL EXPRESSION .)
    COMMA           reduce using rule 11 (EXPRESSION -> EXPRESSION IS_NOT_EQUAL EXPRESSION .)
    RCURLY          reduce using rule 11 (EXPRESSION -> EXPRESSION IS_NOT_EQUAL EXPRESSION .)
    EXPONENT        shift and go to state 14
    MOD             shift and go to state 15
    DIVIDE          shift and go to state 16
    TIMES           shift and go to state 17
    MINUS           shift and go to state 18
    PLUS            shift and go to state 19


state 27

    (12) EXPRESSION -> EXPRESSION IS_EQUAL EXPRESSION .
    (11) EXPRESSION -> EXPRESSION . IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> EXPRESSION . IS_EQUAL EXPRESSION
    (13) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (14) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (15) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (16) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (18) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    IS_NOT_EQUAL    reduce using rule 12 (EXPRESSION -> EXPRESSION IS_EQUAL EXPRESSION .)
    IS_EQUAL        reduce using rule 12 (EXPRESSION -> EXPRESSION IS_EQUAL EXPRESSION .)
    $end            reduce using rule 12 (EXPRESSION -> EXPRESSION IS_EQUAL EXPRESSION .)
    RPAREN          reduce using rule 12 (EXPRESSION -> EXPRESSION IS_EQUAL EXPRESSION .)
    COMMA           reduce using rule 12 (EXPRESSION -> EXPRESSION IS_EQUAL EXPRESSION .)
    RCURLY          reduce using rule 12 (EXPRESSION -> EXPRESSION IS_EQUAL EXPRESSION .)
    EXPONENT        shift and go to state 14
    MOD             shift and go to state 15
    DIVIDE          shift and go to state 16
    TIMES           shift and go to state 17
    MINUS           shift and go to state 18
    PLUS            shift and go to state 19


state 28

    (13) EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .
    (11) EXPRESSION -> EXPRESSION . IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> EXPRESSION . IS_EQUAL EXPRESSION
    (13) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (14) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (15) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (16) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (18) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    IS_NOT_EQUAL    reduce using rule 13 (EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .)
    IS_EQUAL        reduce using rule 13 (EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .)
    MOD             reduce using rule 13 (EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .)
    DIVIDE          reduce using rule 13 (EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .)
    TIMES           reduce using rule 13 (EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .)
    MINUS           reduce using rule 13 (EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .)
    PLUS            reduce using rule 13 (EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .)
    $end            reduce using rule 13 (EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .)
    RPAREN          reduce using rule 13 (EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .)
    COMMA           reduce using rule 13 (EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .)
    RCURLY          reduce using rule 13 (EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .)
    EXPONENT        shift and go to state 14


state 29

    (14) EXPRESSION -> EXPRESSION MOD EXPRESSION .
    (11) EXPRESSION -> EXPRESSION . IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> EXPRESSION . IS_EQUAL EXPRESSION
    (13) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (14) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (15) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (16) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (18) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    IS_NOT_EQUAL    reduce using rule 14 (EXPRESSION -> EXPRESSION MOD EXPRESSION .)
    IS_EQUAL        reduce using rule 14 (EXPRESSION -> EXPRESSION MOD EXPRESSION .)
    MOD             reduce using rule 14 (EXPRESSION -> EXPRESSION MOD EXPRESSION .)
    DIVIDE          reduce using rule 14 (EXPRESSION -> EXPRESSION MOD EXPRESSION .)
    TIMES           reduce using rule 14 (EXPRESSION -> EXPRESSION MOD EXPRESSION .)
    MINUS           reduce using rule 14 (EXPRESSION -> EXPRESSION MOD EXPRESSION .)
    PLUS            reduce using rule 14 (EXPRESSION -> EXPRESSION MOD EXPRESSION .)
    $end            reduce using rule 14 (EXPRESSION -> EXPRESSION MOD EXPRESSION .)
    RPAREN          reduce using rule 14 (EXPRESSION -> EXPRESSION MOD EXPRESSION .)
    COMMA           reduce using rule 14 (EXPRESSION -> EXPRESSION MOD EXPRESSION .)
    RCURLY          reduce using rule 14 (EXPRESSION -> EXPRESSION MOD EXPRESSION .)
    EXPONENT        shift and go to state 14


state 30

    (15) EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .
    (11) EXPRESSION -> EXPRESSION . IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> EXPRESSION . IS_EQUAL EXPRESSION
    (13) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (14) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (15) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (16) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (18) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    IS_NOT_EQUAL    reduce using rule 15 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    IS_EQUAL        reduce using rule 15 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    MOD             reduce using rule 15 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    DIVIDE          reduce using rule 15 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    TIMES           reduce using rule 15 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    MINUS           reduce using rule 15 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    PLUS            reduce using rule 15 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    $end            reduce using rule 15 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    RPAREN          reduce using rule 15 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    COMMA           reduce using rule 15 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    RCURLY          reduce using rule 15 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    EXPONENT        shift and go to state 14


state 31

    (16) EXPRESSION -> EXPRESSION TIMES EXPRESSION .
    (11) EXPRESSION -> EXPRESSION . IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> EXPRESSION . IS_EQUAL EXPRESSION
    (13) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (14) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (15) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (16) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (18) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    IS_NOT_EQUAL    reduce using rule 16 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    IS_EQUAL        reduce using rule 16 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    MOD             reduce using rule 16 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    DIVIDE          reduce using rule 16 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    TIMES           reduce using rule 16 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    MINUS           reduce using rule 16 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    PLUS            reduce using rule 16 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    $end            reduce using rule 16 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    RPAREN          reduce using rule 16 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    COMMA           reduce using rule 16 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    RCURLY          reduce using rule 16 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    EXPONENT        shift and go to state 14


state 32

    (17) EXPRESSION -> EXPRESSION MINUS EXPRESSION .
    (11) EXPRESSION -> EXPRESSION . IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> EXPRESSION . IS_EQUAL EXPRESSION
    (13) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (14) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (15) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (16) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (18) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    IS_NOT_EQUAL    reduce using rule 17 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    IS_EQUAL        reduce using rule 17 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    MINUS           reduce using rule 17 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    PLUS            reduce using rule 17 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    $end            reduce using rule 17 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    RPAREN          reduce using rule 17 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    COMMA           reduce using rule 17 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    RCURLY          reduce using rule 17 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    EXPONENT        shift and go to state 14
    MOD             shift and go to state 15
    DIVIDE          shift and go to state 16
    TIMES           shift and go to state 17


state 33

    (18) EXPRESSION -> EXPRESSION PLUS EXPRESSION .
    (11) EXPRESSION -> EXPRESSION . IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> EXPRESSION . IS_EQUAL EXPRESSION
    (13) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (14) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (15) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (16) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (18) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    IS_NOT_EQUAL    reduce using rule 18 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    IS_EQUAL        reduce using rule 18 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    MINUS           reduce using rule 18 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    PLUS            reduce using rule 18 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    $end            reduce using rule 18 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    RPAREN          reduce using rule 18 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    COMMA           reduce using rule 18 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    RCURLY          reduce using rule 18 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    EXPONENT        shift and go to state 14
    MOD             shift and go to state 15
    DIVIDE          shift and go to state 16
    TIMES           shift and go to state 17


state 34

    (8) CONDITIONAL -> IF LPAREN EXPRESSION . RPAREN LCURLY STATEMENT RCURLY ELSE CONDITIONAL
    (9) CONDITIONAL -> IF LPAREN EXPRESSION . RPAREN LCURLY STATEMENT RCURLY ELSE LCURLY STATEMENT RCURLY
    (10) CONDITIONAL -> IF LPAREN EXPRESSION . RPAREN LCURLY STATEMENT RCURLY
    (11) EXPRESSION -> EXPRESSION . IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> EXPRESSION . IS_EQUAL EXPRESSION
    (13) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (14) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (15) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (16) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (18) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    RPAREN          shift and go to state 38
    IS_NOT_EQUAL    shift and go to state 12
    IS_EQUAL        shift and go to state 13
    EXPONENT        shift and go to state 14
    MOD             shift and go to state 15
    DIVIDE          shift and go to state 16
    TIMES           shift and go to state 17
    MINUS           shift and go to state 18
    PLUS            shift and go to state 19


state 35

    (20) EXPRESSION -> LPAREN EXPRESSION RPAREN .
    IS_NOT_EQUAL    reduce using rule 20 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)
    IS_EQUAL        reduce using rule 20 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)
    EXPONENT        reduce using rule 20 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)
    MOD             reduce using rule 20 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)
    DIVIDE          reduce using rule 20 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)
    TIMES           reduce using rule 20 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)
    MINUS           reduce using rule 20 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)
    PLUS            reduce using rule 20 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)
    $end            reduce using rule 20 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)
    RPAREN          reduce using rule 20 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)
    COMMA           reduce using rule 20 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)
    RCURLY          reduce using rule 20 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)


state 36

    (7) LOOP -> WHILE LPAREN EXPRESSION . RPAREN LCURLY STATEMENT RCURLY
    (11) EXPRESSION -> EXPRESSION . IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> EXPRESSION . IS_EQUAL EXPRESSION
    (13) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (14) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (15) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (16) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (18) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    RPAREN          shift and go to state 39
    IS_NOT_EQUAL    shift and go to state 12
    IS_EQUAL        shift and go to state 13
    EXPONENT        shift and go to state 14
    MOD             shift and go to state 15
    DIVIDE          shift and go to state 16
    TIMES           shift and go to state 17
    MINUS           shift and go to state 18
    PLUS            shift and go to state 19


state 37

    (5) ASSIGNMENT -> ID ASSIGN EXPRESSION . COMMA ASSIGNMENT
    (6) ASSIGNMENT -> ID ASSIGN EXPRESSION .
    (11) EXPRESSION -> EXPRESSION . IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> EXPRESSION . IS_EQUAL EXPRESSION
    (13) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (14) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (15) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (16) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (18) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    COMMA           shift and go to state 40
    $end            reduce using rule 6 (ASSIGNMENT -> ID ASSIGN EXPRESSION .)
    RCURLY          reduce using rule 6 (ASSIGNMENT -> ID ASSIGN EXPRESSION .)
    IS_NOT_EQUAL    shift and go to state 12
    IS_EQUAL        shift and go to state 13
    EXPONENT        shift and go to state 14
    MOD             shift and go to state 15
    DIVIDE          shift and go to state 16
    TIMES           shift and go to state 17
    MINUS           shift and go to state 18
    PLUS            shift and go to state 19


state 38

    (8) CONDITIONAL -> IF LPAREN EXPRESSION RPAREN . LCURLY STATEMENT RCURLY ELSE CONDITIONAL
    (9) CONDITIONAL -> IF LPAREN EXPRESSION RPAREN . LCURLY STATEMENT RCURLY ELSE LCURLY STATEMENT RCURLY
    (10) CONDITIONAL -> IF LPAREN EXPRESSION RPAREN . LCURLY STATEMENT RCURLY
    LCURLY          shift and go to state 41


state 39

    (7) LOOP -> WHILE LPAREN EXPRESSION RPAREN . LCURLY STATEMENT RCURLY
    LCURLY          shift and go to state 42


state 40

    (5) ASSIGNMENT -> ID ASSIGN EXPRESSION COMMA . ASSIGNMENT
    (5) ASSIGNMENT -> . ID ASSIGN EXPRESSION COMMA ASSIGNMENT
    (6) ASSIGNMENT -> . ID ASSIGN EXPRESSION
    ID              shift and go to state 43

    ASSIGNMENT                     shift and go to state 44

state 41

    (8) CONDITIONAL -> IF LPAREN EXPRESSION RPAREN LCURLY . STATEMENT RCURLY ELSE CONDITIONAL
    (9) CONDITIONAL -> IF LPAREN EXPRESSION RPAREN LCURLY . STATEMENT RCURLY ELSE LCURLY STATEMENT RCURLY
    (10) CONDITIONAL -> IF LPAREN EXPRESSION RPAREN LCURLY . STATEMENT RCURLY
    (1) STATEMENT -> . CONDITIONAL
    (2) STATEMENT -> . LOOP
    (3) STATEMENT -> . EXPRESSION
    (4) STATEMENT -> . ASSIGNMENT
    (8) CONDITIONAL -> . IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY ELSE CONDITIONAL
    (9) CONDITIONAL -> . IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY ELSE LCURLY STATEMENT RCURLY
    (10) CONDITIONAL -> . IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY
    (7) LOOP -> . WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY
    (11) EXPRESSION -> . EXPRESSION IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> . EXPRESSION IS_EQUAL EXPRESSION
    (13) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (14) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (15) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (16) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (18) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (19) EXPRESSION -> . MINUS EXPRESSION
    (20) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (21) EXPRESSION -> . ID
    (22) EXPRESSION -> . NUMBER
    (5) ASSIGNMENT -> . ID ASSIGN EXPRESSION COMMA ASSIGNMENT
    (6) ASSIGNMENT -> . ID ASSIGN EXPRESSION
    IF              shift and go to state 6
    WHILE           shift and go to state 8
    MINUS           shift and go to state 9
    LPAREN          shift and go to state 7
    ID              shift and go to state 10
    NUMBER          shift and go to state 11

    EXPRESSION                     shift and go to state 4
    STATEMENT                      shift and go to state 45
    CONDITIONAL                    shift and go to state 2
    LOOP                           shift and go to state 3
    ASSIGNMENT                     shift and go to state 5

state 42

    (7) LOOP -> WHILE LPAREN EXPRESSION RPAREN LCURLY . STATEMENT RCURLY
    (1) STATEMENT -> . CONDITIONAL
    (2) STATEMENT -> . LOOP
    (3) STATEMENT -> . EXPRESSION
    (4) STATEMENT -> . ASSIGNMENT
    (8) CONDITIONAL -> . IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY ELSE CONDITIONAL
    (9) CONDITIONAL -> . IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY ELSE LCURLY STATEMENT RCURLY
    (10) CONDITIONAL -> . IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY
    (7) LOOP -> . WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY
    (11) EXPRESSION -> . EXPRESSION IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> . EXPRESSION IS_EQUAL EXPRESSION
    (13) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (14) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (15) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (16) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (18) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (19) EXPRESSION -> . MINUS EXPRESSION
    (20) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (21) EXPRESSION -> . ID
    (22) EXPRESSION -> . NUMBER
    (5) ASSIGNMENT -> . ID ASSIGN EXPRESSION COMMA ASSIGNMENT
    (6) ASSIGNMENT -> . ID ASSIGN EXPRESSION
    IF              shift and go to state 6
    WHILE           shift and go to state 8
    MINUS           shift and go to state 9
    LPAREN          shift and go to state 7
    ID              shift and go to state 10
    NUMBER          shift and go to state 11

    EXPRESSION                     shift and go to state 4
    STATEMENT                      shift and go to state 46
    CONDITIONAL                    shift and go to state 2
    LOOP                           shift and go to state 3
    ASSIGNMENT                     shift and go to state 5

state 43

    (5) ASSIGNMENT -> ID . ASSIGN EXPRESSION COMMA ASSIGNMENT
    (6) ASSIGNMENT -> ID . ASSIGN EXPRESSION
    ASSIGN          shift and go to state 25


state 44

    (5) ASSIGNMENT -> ID ASSIGN EXPRESSION COMMA ASSIGNMENT .
    $end            reduce using rule 5 (ASSIGNMENT -> ID ASSIGN EXPRESSION COMMA ASSIGNMENT .)
    RCURLY          reduce using rule 5 (ASSIGNMENT -> ID ASSIGN EXPRESSION COMMA ASSIGNMENT .)


state 45

    (8) CONDITIONAL -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT . RCURLY ELSE CONDITIONAL
    (9) CONDITIONAL -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT . RCURLY ELSE LCURLY STATEMENT RCURLY
    (10) CONDITIONAL -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT . RCURLY
    RCURLY          shift and go to state 47


state 46

    (7) LOOP -> WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENT . RCURLY
    RCURLY          shift and go to state 48


state 47

    (8) CONDITIONAL -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY . ELSE CONDITIONAL
    (9) CONDITIONAL -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY . ELSE LCURLY STATEMENT RCURLY
    (10) CONDITIONAL -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY .
    ELSE            shift and go to state 49
    $end            reduce using rule 10 (CONDITIONAL -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY .)
    RCURLY          reduce using rule 10 (CONDITIONAL -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY .)


state 48

    (7) LOOP -> WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY .
    $end            reduce using rule 7 (LOOP -> WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY .)
    RCURLY          reduce using rule 7 (LOOP -> WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY .)


state 49

    (8) CONDITIONAL -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY ELSE . CONDITIONAL
    (9) CONDITIONAL -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY ELSE . LCURLY STATEMENT RCURLY
    (8) CONDITIONAL -> . IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY ELSE CONDITIONAL
    (9) CONDITIONAL -> . IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY ELSE LCURLY STATEMENT RCURLY
    (10) CONDITIONAL -> . IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY
    LCURLY          shift and go to state 50
    IF              shift and go to state 6

    CONDITIONAL                    shift and go to state 51

state 50

    (9) CONDITIONAL -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY ELSE LCURLY . STATEMENT RCURLY
    (1) STATEMENT -> . CONDITIONAL
    (2) STATEMENT -> . LOOP
    (3) STATEMENT -> . EXPRESSION
    (4) STATEMENT -> . ASSIGNMENT
    (8) CONDITIONAL -> . IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY ELSE CONDITIONAL
    (9) CONDITIONAL -> . IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY ELSE LCURLY STATEMENT RCURLY
    (10) CONDITIONAL -> . IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY
    (7) LOOP -> . WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY
    (11) EXPRESSION -> . EXPRESSION IS_NOT_EQUAL EXPRESSION
    (12) EXPRESSION -> . EXPRESSION IS_EQUAL EXPRESSION
    (13) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (14) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (15) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (16) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (18) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (19) EXPRESSION -> . MINUS EXPRESSION
    (20) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (21) EXPRESSION -> . ID
    (22) EXPRESSION -> . NUMBER
    (5) ASSIGNMENT -> . ID ASSIGN EXPRESSION COMMA ASSIGNMENT
    (6) ASSIGNMENT -> . ID ASSIGN EXPRESSION
    IF              shift and go to state 6
    WHILE           shift and go to state 8
    MINUS           shift and go to state 9
    LPAREN          shift and go to state 7
    ID              shift and go to state 10
    NUMBER          shift and go to state 11

    EXPRESSION                     shift and go to state 4
    STATEMENT                      shift and go to state 52
    CONDITIONAL                    shift and go to state 2
    LOOP                           shift and go to state 3
    ASSIGNMENT                     shift and go to state 5

state 51

    (8) CONDITIONAL -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY ELSE CONDITIONAL .
    $end            reduce using rule 8 (CONDITIONAL -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY ELSE CONDITIONAL .)
    RCURLY          reduce using rule 8 (CONDITIONAL -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY ELSE CONDITIONAL .)


state 52

    (9) CONDITIONAL -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY ELSE LCURLY STATEMENT . RCURLY
    RCURLY          shift and go to state 53


state 53

    (9) CONDITIONAL -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY ELSE LCURLY STATEMENT RCURLY .
    $end            reduce using rule 9 (CONDITIONAL -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY ELSE LCURLY STATEMENT RCURLY .)
    RCURLY          reduce using rule 9 (CONDITIONAL -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENT RCURLY ELSE LCURLY STATEMENT RCURLY .)
