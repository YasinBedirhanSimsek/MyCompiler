Grammar:

Rule 0     S' -> STATEMENT_LIST
Rule 1     STATEMENT_LIST -> STATEMENT SEMI_COL
Rule 2     STATEMENT_LIST -> STATEMENT SEMI_COL STATEMENT_LIST
Rule 3     STATEMENT -> FUNCTIONAL
Rule 4     STATEMENT -> CONDITIONAL
Rule 5     STATEMENT -> LOOP
Rule 6     STATEMENT -> EXPRESSION
Rule 7     STATEMENT -> ASSIGNMENT
Rule 8     ASSIGNMENT -> ID ASSIGN EXPRESSION COMMA ASSIGNMENT
Rule 9     ASSIGNMENT -> ID ASSIGN EXPRESSION
Rule 10    LOOP -> WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY
Rule 11    CONDITIONAL -> IF LPAREN error RPAREN LCURLY STATEMENT_LIST RCURLY
Rule 12    CONDITIONAL -> IF LPAREN error LCURLY STATEMENT_LIST RCURLY
Rule 13    CONDITIONAL -> IF error SEMI_COL
Rule 14    CONDITIONAL -> IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE CONDITIONAL
Rule 15    CONDITIONAL -> IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE LCURLY STATEMENT_LIST RCURLY
Rule 16    CONDITIONAL -> IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY
Rule 17    FUNCTIONAL -> FUNCTION_CALL
Rule 18    FUNCTIONAL -> FUNCTION_DEFINITION
Rule 19    FUNCTION_DEFINITION -> FUNCTION ID LPAREN PARAM_LIST RPAREN LCURLY STATEMENT_LIST RCURLY
Rule 20    PARAM_LIST -> ID COMMA PARAM_LIST
Rule 21    PARAM_LIST -> ID
Rule 22    PARAM_LIST -> EMPTY
Rule 23    FUNCTION_CALL -> ID LPAREN VALUE_LIST RPAREN
Rule 24    VALUE_LIST -> EXPRESSION COMMA VALUE_LIST
Rule 25    VALUE_LIST -> EXPRESSION
Rule 26    VALUE_LIST -> EMPTY
Rule 27    EXPRESSION -> EXPRESSION BITWISE_OR EXPRESSION  [precedence=left, level=4]
Rule 28    EXPRESSION -> EXPRESSION BITWISE_AND EXPRESSION  [precedence=left, level=3]
Rule 29    EXPRESSION -> EXPRESSION EXPONENT EXPRESSION  [precedence=right, level=9]
Rule 30    EXPRESSION -> EXPRESSION MOD EXPRESSION  [precedence=left, level=7]
Rule 31    EXPRESSION -> EXPRESSION DIVIDE EXPRESSION  [precedence=left, level=7]
Rule 32    EXPRESSION -> EXPRESSION TIMES EXPRESSION  [precedence=left, level=7]
Rule 33    EXPRESSION -> EXPRESSION MINUS EXPRESSION  [precedence=left, level=6]
Rule 34    EXPRESSION -> EXPRESSION PLUS EXPRESSION  [precedence=left, level=6]
Rule 35    EXPRESSION -> MINUS EXPRESSION  [precedence=right, level=8]
Rule 36    EXPRESSION -> LPAREN EXPRESSION RPAREN
Rule 37    EXPRESSION -> ID
Rule 38    EXPRESSION -> NUMBER
Rule 39    BOOL_EXPRESSION -> BOOL_EXPRESSION OR BOOL_EXPRESSION  [precedence=left, level=1]
Rule 40    BOOL_EXPRESSION -> BOOL_EXPRESSION AND BOOL_EXPRESSION  [precedence=left, level=2]
Rule 41    BOOL_EXPRESSION -> EXPRESSION LESS_THAN EXPRESSION  [precedence=left, level=5]
Rule 42    BOOL_EXPRESSION -> EXPRESSION LESS_THAN_EQ EXPRESSION  [precedence=left, level=5]
Rule 43    BOOL_EXPRESSION -> EXPRESSION GREATER_THAN EXPRESSION  [precedence=left, level=5]
Rule 44    BOOL_EXPRESSION -> EXPRESSION GREATER_THAN_EQ EXPRESSION  [precedence=left, level=5]
Rule 45    BOOL_EXPRESSION -> EXPRESSION IS_NOT_EQUAL EXPRESSION  [precedence=left, level=5]
Rule 46    BOOL_EXPRESSION -> EXPRESSION IS_EQUAL EXPRESSION  [precedence=left, level=5]
Rule 47    BOOL_EXPRESSION -> LPAREN BOOL_EXPRESSION RPAREN
Rule 48    EMPTY -> <empty>

Terminals, with rules where they appear:

AND                  : 40
ASSIGN               : 8 9
BITWISE_AND          : 28
BITWISE_OR           : 27
COMMA                : 8 20 24
DIVIDE               : 31
ELSE                 : 14 15
EXPONENT             : 29
FUNCTION             : 19
GREATER_THAN         : 43
GREATER_THAN_EQ      : 44
ID                   : 8 9 19 20 21 23 37
IF                   : 11 12 13 14 15 16
IS_EQUAL             : 46
IS_NOT_EQUAL         : 45
LCURLY               : 10 11 12 14 15 15 16 19
LESS_THAN            : 41
LESS_THAN_EQ         : 42
LPAREN               : 10 11 12 14 15 16 19 23 36 47
MINUS                : 33 35
MOD                  : 30
NUMBER               : 38
OR                   : 39
PLUS                 : 34
RCURLY               : 10 11 12 14 15 15 16 19
RPAREN               : 10 11 14 15 16 19 23 36 47
SEMI_COL             : 1 2 13
TIMES                : 32
WHILE                : 10
error                : 11 12 13

Nonterminals, with rules where they appear:

ASSIGNMENT           : 7 8
BOOL_EXPRESSION      : 14 15 16 39 39 40 40 47
CONDITIONAL          : 4 14
EMPTY                : 22 26
EXPRESSION           : 6 8 9 10 24 25 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 36 41 41 42 42 43 43 44 44 45 45 46 46
FUNCTIONAL           : 3
FUNCTION_CALL        : 17
FUNCTION_DEFINITION  : 18
LOOP                 : 5
PARAM_LIST           : 19 20
STATEMENT            : 1 2
STATEMENT_LIST       : 2 10 11 12 14 15 15 16 19 0
VALUE_LIST           : 23 24


state 0

    (0) S' -> . STATEMENT_LIST
    (1) STATEMENT_LIST -> . STATEMENT SEMI_COL
    (2) STATEMENT_LIST -> . STATEMENT SEMI_COL STATEMENT_LIST
    (3) STATEMENT -> . FUNCTIONAL
    (4) STATEMENT -> . CONDITIONAL
    (5) STATEMENT -> . LOOP
    (6) STATEMENT -> . EXPRESSION
    (7) STATEMENT -> . ASSIGNMENT
    (17) FUNCTIONAL -> . FUNCTION_CALL
    (18) FUNCTIONAL -> . FUNCTION_DEFINITION
    (11) CONDITIONAL -> . IF LPAREN error RPAREN LCURLY STATEMENT_LIST RCURLY
    (12) CONDITIONAL -> . IF LPAREN error LCURLY STATEMENT_LIST RCURLY
    (13) CONDITIONAL -> . IF error SEMI_COL
    (14) CONDITIONAL -> . IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE CONDITIONAL
    (15) CONDITIONAL -> . IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE LCURLY STATEMENT_LIST RCURLY
    (16) CONDITIONAL -> . IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY
    (10) LOOP -> . WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    (8) ASSIGNMENT -> . ID ASSIGN EXPRESSION COMMA ASSIGNMENT
    (9) ASSIGNMENT -> . ID ASSIGN EXPRESSION
    (23) FUNCTION_CALL -> . ID LPAREN VALUE_LIST RPAREN
    (19) FUNCTION_DEFINITION -> . FUNCTION ID LPAREN PARAM_LIST RPAREN LCURLY STATEMENT_LIST RCURLY
    IF              shift and go to state 10
    WHILE           shift and go to state 12
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 11
    ID              shift and go to state 14
    NUMBER          shift and go to state 15
    FUNCTION        shift and go to state 16

    STATEMENT_LIST                 shift and go to state 1
    STATEMENT                      shift and go to state 2
    FUNCTIONAL                     shift and go to state 3
    CONDITIONAL                    shift and go to state 4
    LOOP                           shift and go to state 5
    EXPRESSION                     shift and go to state 6
    ASSIGNMENT                     shift and go to state 7
    FUNCTION_CALL                  shift and go to state 8
    FUNCTION_DEFINITION            shift and go to state 9

state 1

    (0) S' -> STATEMENT_LIST .


state 2

    (1) STATEMENT_LIST -> STATEMENT . SEMI_COL
    (2) STATEMENT_LIST -> STATEMENT . SEMI_COL STATEMENT_LIST
    SEMI_COL        shift and go to state 17


state 3

    (3) STATEMENT -> FUNCTIONAL .
    SEMI_COL        reduce using rule 3 (STATEMENT -> FUNCTIONAL .)


state 4

    (4) STATEMENT -> CONDITIONAL .
    SEMI_COL        reduce using rule 4 (STATEMENT -> CONDITIONAL .)


state 5

    (5) STATEMENT -> LOOP .
    SEMI_COL        reduce using rule 5 (STATEMENT -> LOOP .)


state 6

    (6) STATEMENT -> EXPRESSION .
    (27) EXPRESSION -> EXPRESSION . BITWISE_OR EXPRESSION
    (28) EXPRESSION -> EXPRESSION . BITWISE_AND EXPRESSION
    (29) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (30) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (31) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (32) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (33) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (34) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    SEMI_COL        reduce using rule 6 (STATEMENT -> EXPRESSION .)
    BITWISE_OR      shift and go to state 18
    BITWISE_AND     shift and go to state 19
    EXPONENT        shift and go to state 20
    MOD             shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MINUS           shift and go to state 24
    PLUS            shift and go to state 25


state 7

    (7) STATEMENT -> ASSIGNMENT .
    SEMI_COL        reduce using rule 7 (STATEMENT -> ASSIGNMENT .)


state 8

    (17) FUNCTIONAL -> FUNCTION_CALL .
    SEMI_COL        reduce using rule 17 (FUNCTIONAL -> FUNCTION_CALL .)


state 9

    (18) FUNCTIONAL -> FUNCTION_DEFINITION .
    SEMI_COL        reduce using rule 18 (FUNCTIONAL -> FUNCTION_DEFINITION .)


state 10

    (11) CONDITIONAL -> IF . LPAREN error RPAREN LCURLY STATEMENT_LIST RCURLY
    (12) CONDITIONAL -> IF . LPAREN error LCURLY STATEMENT_LIST RCURLY
    (13) CONDITIONAL -> IF . error SEMI_COL
    (14) CONDITIONAL -> IF . LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE CONDITIONAL
    (15) CONDITIONAL -> IF . LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE LCURLY STATEMENT_LIST RCURLY
    (16) CONDITIONAL -> IF . LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY
    LPAREN          shift and go to state 26
    error           shift and go to state 27


state 11

    (36) EXPRESSION -> LPAREN . EXPRESSION RPAREN
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 15

    EXPRESSION                     shift and go to state 28

state 12

    (10) LOOP -> WHILE . LPAREN EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY
    LPAREN          shift and go to state 30


state 13

    (35) EXPRESSION -> MINUS . EXPRESSION
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 15

    EXPRESSION                     shift and go to state 31

state 14

    (37) EXPRESSION -> ID .
    (8) ASSIGNMENT -> ID . ASSIGN EXPRESSION COMMA ASSIGNMENT
    (9) ASSIGNMENT -> ID . ASSIGN EXPRESSION
    (23) FUNCTION_CALL -> ID . LPAREN VALUE_LIST RPAREN
    BITWISE_OR      reduce using rule 37 (EXPRESSION -> ID .)
    BITWISE_AND     reduce using rule 37 (EXPRESSION -> ID .)
    EXPONENT        reduce using rule 37 (EXPRESSION -> ID .)
    MOD             reduce using rule 37 (EXPRESSION -> ID .)
    DIVIDE          reduce using rule 37 (EXPRESSION -> ID .)
    TIMES           reduce using rule 37 (EXPRESSION -> ID .)
    MINUS           reduce using rule 37 (EXPRESSION -> ID .)
    PLUS            reduce using rule 37 (EXPRESSION -> ID .)
    SEMI_COL        reduce using rule 37 (EXPRESSION -> ID .)
    ASSIGN          shift and go to state 32
    LPAREN          shift and go to state 33


state 15

    (38) EXPRESSION -> NUMBER .
    BITWISE_OR      reduce using rule 38 (EXPRESSION -> NUMBER .)
    BITWISE_AND     reduce using rule 38 (EXPRESSION -> NUMBER .)
    EXPONENT        reduce using rule 38 (EXPRESSION -> NUMBER .)
    MOD             reduce using rule 38 (EXPRESSION -> NUMBER .)
    DIVIDE          reduce using rule 38 (EXPRESSION -> NUMBER .)
    TIMES           reduce using rule 38 (EXPRESSION -> NUMBER .)
    MINUS           reduce using rule 38 (EXPRESSION -> NUMBER .)
    PLUS            reduce using rule 38 (EXPRESSION -> NUMBER .)
    SEMI_COL        reduce using rule 38 (EXPRESSION -> NUMBER .)
    RPAREN          reduce using rule 38 (EXPRESSION -> NUMBER .)
    LESS_THAN       reduce using rule 38 (EXPRESSION -> NUMBER .)
    LESS_THAN_EQ    reduce using rule 38 (EXPRESSION -> NUMBER .)
    GREATER_THAN    reduce using rule 38 (EXPRESSION -> NUMBER .)
    GREATER_THAN_EQ reduce using rule 38 (EXPRESSION -> NUMBER .)
    IS_NOT_EQUAL    reduce using rule 38 (EXPRESSION -> NUMBER .)
    IS_EQUAL        reduce using rule 38 (EXPRESSION -> NUMBER .)
    COMMA           reduce using rule 38 (EXPRESSION -> NUMBER .)
    OR              reduce using rule 38 (EXPRESSION -> NUMBER .)
    AND             reduce using rule 38 (EXPRESSION -> NUMBER .)


state 16

    (19) FUNCTION_DEFINITION -> FUNCTION . ID LPAREN PARAM_LIST RPAREN LCURLY STATEMENT_LIST RCURLY
    ID              shift and go to state 34


state 17

    (1) STATEMENT_LIST -> STATEMENT SEMI_COL .
    (2) STATEMENT_LIST -> STATEMENT SEMI_COL . STATEMENT_LIST
    (1) STATEMENT_LIST -> . STATEMENT SEMI_COL
    (2) STATEMENT_LIST -> . STATEMENT SEMI_COL STATEMENT_LIST
    (3) STATEMENT -> . FUNCTIONAL
    (4) STATEMENT -> . CONDITIONAL
    (5) STATEMENT -> . LOOP
    (6) STATEMENT -> . EXPRESSION
    (7) STATEMENT -> . ASSIGNMENT
    (17) FUNCTIONAL -> . FUNCTION_CALL
    (18) FUNCTIONAL -> . FUNCTION_DEFINITION
    (11) CONDITIONAL -> . IF LPAREN error RPAREN LCURLY STATEMENT_LIST RCURLY
    (12) CONDITIONAL -> . IF LPAREN error LCURLY STATEMENT_LIST RCURLY
    (13) CONDITIONAL -> . IF error SEMI_COL
    (14) CONDITIONAL -> . IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE CONDITIONAL
    (15) CONDITIONAL -> . IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE LCURLY STATEMENT_LIST RCURLY
    (16) CONDITIONAL -> . IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY
    (10) LOOP -> . WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    (8) ASSIGNMENT -> . ID ASSIGN EXPRESSION COMMA ASSIGNMENT
    (9) ASSIGNMENT -> . ID ASSIGN EXPRESSION
    (23) FUNCTION_CALL -> . ID LPAREN VALUE_LIST RPAREN
    (19) FUNCTION_DEFINITION -> . FUNCTION ID LPAREN PARAM_LIST RPAREN LCURLY STATEMENT_LIST RCURLY
    $end            reduce using rule 1 (STATEMENT_LIST -> STATEMENT SEMI_COL .)
    RCURLY          reduce using rule 1 (STATEMENT_LIST -> STATEMENT SEMI_COL .)
    IF              shift and go to state 10
    WHILE           shift and go to state 12
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 11
    ID              shift and go to state 14
    NUMBER          shift and go to state 15
    FUNCTION        shift and go to state 16

    STATEMENT                      shift and go to state 2
    STATEMENT_LIST                 shift and go to state 35
    FUNCTIONAL                     shift and go to state 3
    CONDITIONAL                    shift and go to state 4
    LOOP                           shift and go to state 5
    EXPRESSION                     shift and go to state 6
    ASSIGNMENT                     shift and go to state 7
    FUNCTION_CALL                  shift and go to state 8
    FUNCTION_DEFINITION            shift and go to state 9

state 18

    (27) EXPRESSION -> EXPRESSION BITWISE_OR . EXPRESSION
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 15

    EXPRESSION                     shift and go to state 36

state 19

    (28) EXPRESSION -> EXPRESSION BITWISE_AND . EXPRESSION
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 15

    EXPRESSION                     shift and go to state 37

state 20

    (29) EXPRESSION -> EXPRESSION EXPONENT . EXPRESSION
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 15

    EXPRESSION                     shift and go to state 38

state 21

    (30) EXPRESSION -> EXPRESSION MOD . EXPRESSION
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 15

    EXPRESSION                     shift and go to state 39

state 22

    (31) EXPRESSION -> EXPRESSION DIVIDE . EXPRESSION
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 15

    EXPRESSION                     shift and go to state 40

state 23

    (32) EXPRESSION -> EXPRESSION TIMES . EXPRESSION
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 15

    EXPRESSION                     shift and go to state 41

state 24

    (33) EXPRESSION -> EXPRESSION MINUS . EXPRESSION
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 15

    EXPRESSION                     shift and go to state 42

state 25

    (34) EXPRESSION -> EXPRESSION PLUS . EXPRESSION
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 15

    EXPRESSION                     shift and go to state 43

state 26

    (11) CONDITIONAL -> IF LPAREN . error RPAREN LCURLY STATEMENT_LIST RCURLY
    (12) CONDITIONAL -> IF LPAREN . error LCURLY STATEMENT_LIST RCURLY
    (14) CONDITIONAL -> IF LPAREN . BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE CONDITIONAL
    (15) CONDITIONAL -> IF LPAREN . BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE LCURLY STATEMENT_LIST RCURLY
    (16) CONDITIONAL -> IF LPAREN . BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY
    (39) BOOL_EXPRESSION -> . BOOL_EXPRESSION OR BOOL_EXPRESSION
    (40) BOOL_EXPRESSION -> . BOOL_EXPRESSION AND BOOL_EXPRESSION
    (41) BOOL_EXPRESSION -> . EXPRESSION LESS_THAN EXPRESSION
    (42) BOOL_EXPRESSION -> . EXPRESSION LESS_THAN_EQ EXPRESSION
    (43) BOOL_EXPRESSION -> . EXPRESSION GREATER_THAN EXPRESSION
    (44) BOOL_EXPRESSION -> . EXPRESSION GREATER_THAN_EQ EXPRESSION
    (45) BOOL_EXPRESSION -> . EXPRESSION IS_NOT_EQUAL EXPRESSION
    (46) BOOL_EXPRESSION -> . EXPRESSION IS_EQUAL EXPRESSION
    (47) BOOL_EXPRESSION -> . LPAREN BOOL_EXPRESSION RPAREN
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    error           shift and go to state 45
    LPAREN          shift and go to state 44
    MINUS           shift and go to state 13
    ID              shift and go to state 29
    NUMBER          shift and go to state 15

    BOOL_EXPRESSION                shift and go to state 46
    EXPRESSION                     shift and go to state 47

state 27

    (13) CONDITIONAL -> IF error . SEMI_COL
    SEMI_COL        shift and go to state 48


state 28

    (36) EXPRESSION -> LPAREN EXPRESSION . RPAREN
    (27) EXPRESSION -> EXPRESSION . BITWISE_OR EXPRESSION
    (28) EXPRESSION -> EXPRESSION . BITWISE_AND EXPRESSION
    (29) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (30) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (31) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (32) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (33) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (34) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    RPAREN          shift and go to state 49
    BITWISE_OR      shift and go to state 18
    BITWISE_AND     shift and go to state 19
    EXPONENT        shift and go to state 20
    MOD             shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MINUS           shift and go to state 24
    PLUS            shift and go to state 25


state 29

    (37) EXPRESSION -> ID .
    RPAREN          reduce using rule 37 (EXPRESSION -> ID .)
    BITWISE_OR      reduce using rule 37 (EXPRESSION -> ID .)
    BITWISE_AND     reduce using rule 37 (EXPRESSION -> ID .)
    EXPONENT        reduce using rule 37 (EXPRESSION -> ID .)
    MOD             reduce using rule 37 (EXPRESSION -> ID .)
    DIVIDE          reduce using rule 37 (EXPRESSION -> ID .)
    TIMES           reduce using rule 37 (EXPRESSION -> ID .)
    MINUS           reduce using rule 37 (EXPRESSION -> ID .)
    PLUS            reduce using rule 37 (EXPRESSION -> ID .)
    SEMI_COL        reduce using rule 37 (EXPRESSION -> ID .)
    LESS_THAN       reduce using rule 37 (EXPRESSION -> ID .)
    LESS_THAN_EQ    reduce using rule 37 (EXPRESSION -> ID .)
    GREATER_THAN    reduce using rule 37 (EXPRESSION -> ID .)
    GREATER_THAN_EQ reduce using rule 37 (EXPRESSION -> ID .)
    IS_NOT_EQUAL    reduce using rule 37 (EXPRESSION -> ID .)
    IS_EQUAL        reduce using rule 37 (EXPRESSION -> ID .)
    COMMA           reduce using rule 37 (EXPRESSION -> ID .)
    OR              reduce using rule 37 (EXPRESSION -> ID .)
    AND             reduce using rule 37 (EXPRESSION -> ID .)


state 30

    (10) LOOP -> WHILE LPAREN . EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 15

    EXPRESSION                     shift and go to state 50

state 31

    (35) EXPRESSION -> MINUS EXPRESSION .
    (27) EXPRESSION -> EXPRESSION . BITWISE_OR EXPRESSION
    (28) EXPRESSION -> EXPRESSION . BITWISE_AND EXPRESSION
    (29) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (30) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (31) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (32) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (33) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (34) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    BITWISE_OR      reduce using rule 35 (EXPRESSION -> MINUS EXPRESSION .)
    BITWISE_AND     reduce using rule 35 (EXPRESSION -> MINUS EXPRESSION .)
    MOD             reduce using rule 35 (EXPRESSION -> MINUS EXPRESSION .)
    DIVIDE          reduce using rule 35 (EXPRESSION -> MINUS EXPRESSION .)
    TIMES           reduce using rule 35 (EXPRESSION -> MINUS EXPRESSION .)
    MINUS           reduce using rule 35 (EXPRESSION -> MINUS EXPRESSION .)
    PLUS            reduce using rule 35 (EXPRESSION -> MINUS EXPRESSION .)
    SEMI_COL        reduce using rule 35 (EXPRESSION -> MINUS EXPRESSION .)
    RPAREN          reduce using rule 35 (EXPRESSION -> MINUS EXPRESSION .)
    LESS_THAN       reduce using rule 35 (EXPRESSION -> MINUS EXPRESSION .)
    LESS_THAN_EQ    reduce using rule 35 (EXPRESSION -> MINUS EXPRESSION .)
    GREATER_THAN    reduce using rule 35 (EXPRESSION -> MINUS EXPRESSION .)
    GREATER_THAN_EQ reduce using rule 35 (EXPRESSION -> MINUS EXPRESSION .)
    IS_NOT_EQUAL    reduce using rule 35 (EXPRESSION -> MINUS EXPRESSION .)
    IS_EQUAL        reduce using rule 35 (EXPRESSION -> MINUS EXPRESSION .)
    COMMA           reduce using rule 35 (EXPRESSION -> MINUS EXPRESSION .)
    OR              reduce using rule 35 (EXPRESSION -> MINUS EXPRESSION .)
    AND             reduce using rule 35 (EXPRESSION -> MINUS EXPRESSION .)
    EXPONENT        shift and go to state 20


state 32

    (8) ASSIGNMENT -> ID ASSIGN . EXPRESSION COMMA ASSIGNMENT
    (9) ASSIGNMENT -> ID ASSIGN . EXPRESSION
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 15

    EXPRESSION                     shift and go to state 51

state 33

    (23) FUNCTION_CALL -> ID LPAREN . VALUE_LIST RPAREN
    (24) VALUE_LIST -> . EXPRESSION COMMA VALUE_LIST
    (25) VALUE_LIST -> . EXPRESSION
    (26) VALUE_LIST -> . EMPTY
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    (48) EMPTY -> .
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 15
    RPAREN          reduce using rule 48 (EMPTY -> .)

    VALUE_LIST                     shift and go to state 52
    EXPRESSION                     shift and go to state 53
    EMPTY                          shift and go to state 54

state 34

    (19) FUNCTION_DEFINITION -> FUNCTION ID . LPAREN PARAM_LIST RPAREN LCURLY STATEMENT_LIST RCURLY
    LPAREN          shift and go to state 55


state 35

    (2) STATEMENT_LIST -> STATEMENT SEMI_COL STATEMENT_LIST .
    $end            reduce using rule 2 (STATEMENT_LIST -> STATEMENT SEMI_COL STATEMENT_LIST .)
    RCURLY          reduce using rule 2 (STATEMENT_LIST -> STATEMENT SEMI_COL STATEMENT_LIST .)


state 36

    (27) EXPRESSION -> EXPRESSION BITWISE_OR EXPRESSION .
    (27) EXPRESSION -> EXPRESSION . BITWISE_OR EXPRESSION
    (28) EXPRESSION -> EXPRESSION . BITWISE_AND EXPRESSION
    (29) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (30) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (31) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (32) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (33) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (34) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    BITWISE_OR      reduce using rule 27 (EXPRESSION -> EXPRESSION BITWISE_OR EXPRESSION .)
    BITWISE_AND     reduce using rule 27 (EXPRESSION -> EXPRESSION BITWISE_OR EXPRESSION .)
    SEMI_COL        reduce using rule 27 (EXPRESSION -> EXPRESSION BITWISE_OR EXPRESSION .)
    RPAREN          reduce using rule 27 (EXPRESSION -> EXPRESSION BITWISE_OR EXPRESSION .)
    LESS_THAN       reduce using rule 27 (EXPRESSION -> EXPRESSION BITWISE_OR EXPRESSION .)
    LESS_THAN_EQ    reduce using rule 27 (EXPRESSION -> EXPRESSION BITWISE_OR EXPRESSION .)
    GREATER_THAN    reduce using rule 27 (EXPRESSION -> EXPRESSION BITWISE_OR EXPRESSION .)
    GREATER_THAN_EQ reduce using rule 27 (EXPRESSION -> EXPRESSION BITWISE_OR EXPRESSION .)
    IS_NOT_EQUAL    reduce using rule 27 (EXPRESSION -> EXPRESSION BITWISE_OR EXPRESSION .)
    IS_EQUAL        reduce using rule 27 (EXPRESSION -> EXPRESSION BITWISE_OR EXPRESSION .)
    COMMA           reduce using rule 27 (EXPRESSION -> EXPRESSION BITWISE_OR EXPRESSION .)
    OR              reduce using rule 27 (EXPRESSION -> EXPRESSION BITWISE_OR EXPRESSION .)
    AND             reduce using rule 27 (EXPRESSION -> EXPRESSION BITWISE_OR EXPRESSION .)
    EXPONENT        shift and go to state 20
    MOD             shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MINUS           shift and go to state 24
    PLUS            shift and go to state 25


state 37

    (28) EXPRESSION -> EXPRESSION BITWISE_AND EXPRESSION .
    (27) EXPRESSION -> EXPRESSION . BITWISE_OR EXPRESSION
    (28) EXPRESSION -> EXPRESSION . BITWISE_AND EXPRESSION
    (29) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (30) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (31) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (32) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (33) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (34) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    BITWISE_AND     reduce using rule 28 (EXPRESSION -> EXPRESSION BITWISE_AND EXPRESSION .)
    SEMI_COL        reduce using rule 28 (EXPRESSION -> EXPRESSION BITWISE_AND EXPRESSION .)
    RPAREN          reduce using rule 28 (EXPRESSION -> EXPRESSION BITWISE_AND EXPRESSION .)
    LESS_THAN       reduce using rule 28 (EXPRESSION -> EXPRESSION BITWISE_AND EXPRESSION .)
    LESS_THAN_EQ    reduce using rule 28 (EXPRESSION -> EXPRESSION BITWISE_AND EXPRESSION .)
    GREATER_THAN    reduce using rule 28 (EXPRESSION -> EXPRESSION BITWISE_AND EXPRESSION .)
    GREATER_THAN_EQ reduce using rule 28 (EXPRESSION -> EXPRESSION BITWISE_AND EXPRESSION .)
    IS_NOT_EQUAL    reduce using rule 28 (EXPRESSION -> EXPRESSION BITWISE_AND EXPRESSION .)
    IS_EQUAL        reduce using rule 28 (EXPRESSION -> EXPRESSION BITWISE_AND EXPRESSION .)
    COMMA           reduce using rule 28 (EXPRESSION -> EXPRESSION BITWISE_AND EXPRESSION .)
    OR              reduce using rule 28 (EXPRESSION -> EXPRESSION BITWISE_AND EXPRESSION .)
    AND             reduce using rule 28 (EXPRESSION -> EXPRESSION BITWISE_AND EXPRESSION .)
    BITWISE_OR      shift and go to state 18
    EXPONENT        shift and go to state 20
    MOD             shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MINUS           shift and go to state 24
    PLUS            shift and go to state 25


state 38

    (29) EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .
    (27) EXPRESSION -> EXPRESSION . BITWISE_OR EXPRESSION
    (28) EXPRESSION -> EXPRESSION . BITWISE_AND EXPRESSION
    (29) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (30) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (31) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (32) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (33) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (34) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    BITWISE_OR      reduce using rule 29 (EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .)
    BITWISE_AND     reduce using rule 29 (EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .)
    MOD             reduce using rule 29 (EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .)
    DIVIDE          reduce using rule 29 (EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .)
    TIMES           reduce using rule 29 (EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .)
    MINUS           reduce using rule 29 (EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .)
    PLUS            reduce using rule 29 (EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .)
    SEMI_COL        reduce using rule 29 (EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .)
    RPAREN          reduce using rule 29 (EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .)
    LESS_THAN       reduce using rule 29 (EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .)
    LESS_THAN_EQ    reduce using rule 29 (EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .)
    GREATER_THAN    reduce using rule 29 (EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .)
    GREATER_THAN_EQ reduce using rule 29 (EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .)
    IS_NOT_EQUAL    reduce using rule 29 (EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .)
    IS_EQUAL        reduce using rule 29 (EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .)
    COMMA           reduce using rule 29 (EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .)
    OR              reduce using rule 29 (EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .)
    AND             reduce using rule 29 (EXPRESSION -> EXPRESSION EXPONENT EXPRESSION .)
    EXPONENT        shift and go to state 20


state 39

    (30) EXPRESSION -> EXPRESSION MOD EXPRESSION .
    (27) EXPRESSION -> EXPRESSION . BITWISE_OR EXPRESSION
    (28) EXPRESSION -> EXPRESSION . BITWISE_AND EXPRESSION
    (29) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (30) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (31) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (32) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (33) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (34) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    BITWISE_OR      reduce using rule 30 (EXPRESSION -> EXPRESSION MOD EXPRESSION .)
    BITWISE_AND     reduce using rule 30 (EXPRESSION -> EXPRESSION MOD EXPRESSION .)
    MOD             reduce using rule 30 (EXPRESSION -> EXPRESSION MOD EXPRESSION .)
    DIVIDE          reduce using rule 30 (EXPRESSION -> EXPRESSION MOD EXPRESSION .)
    TIMES           reduce using rule 30 (EXPRESSION -> EXPRESSION MOD EXPRESSION .)
    MINUS           reduce using rule 30 (EXPRESSION -> EXPRESSION MOD EXPRESSION .)
    PLUS            reduce using rule 30 (EXPRESSION -> EXPRESSION MOD EXPRESSION .)
    SEMI_COL        reduce using rule 30 (EXPRESSION -> EXPRESSION MOD EXPRESSION .)
    RPAREN          reduce using rule 30 (EXPRESSION -> EXPRESSION MOD EXPRESSION .)
    LESS_THAN       reduce using rule 30 (EXPRESSION -> EXPRESSION MOD EXPRESSION .)
    LESS_THAN_EQ    reduce using rule 30 (EXPRESSION -> EXPRESSION MOD EXPRESSION .)
    GREATER_THAN    reduce using rule 30 (EXPRESSION -> EXPRESSION MOD EXPRESSION .)
    GREATER_THAN_EQ reduce using rule 30 (EXPRESSION -> EXPRESSION MOD EXPRESSION .)
    IS_NOT_EQUAL    reduce using rule 30 (EXPRESSION -> EXPRESSION MOD EXPRESSION .)
    IS_EQUAL        reduce using rule 30 (EXPRESSION -> EXPRESSION MOD EXPRESSION .)
    COMMA           reduce using rule 30 (EXPRESSION -> EXPRESSION MOD EXPRESSION .)
    OR              reduce using rule 30 (EXPRESSION -> EXPRESSION MOD EXPRESSION .)
    AND             reduce using rule 30 (EXPRESSION -> EXPRESSION MOD EXPRESSION .)
    EXPONENT        shift and go to state 20


state 40

    (31) EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .
    (27) EXPRESSION -> EXPRESSION . BITWISE_OR EXPRESSION
    (28) EXPRESSION -> EXPRESSION . BITWISE_AND EXPRESSION
    (29) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (30) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (31) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (32) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (33) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (34) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    BITWISE_OR      reduce using rule 31 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    BITWISE_AND     reduce using rule 31 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    MOD             reduce using rule 31 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    DIVIDE          reduce using rule 31 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    TIMES           reduce using rule 31 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    MINUS           reduce using rule 31 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    PLUS            reduce using rule 31 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    SEMI_COL        reduce using rule 31 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    RPAREN          reduce using rule 31 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    LESS_THAN       reduce using rule 31 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    LESS_THAN_EQ    reduce using rule 31 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    GREATER_THAN    reduce using rule 31 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    GREATER_THAN_EQ reduce using rule 31 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    IS_NOT_EQUAL    reduce using rule 31 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    IS_EQUAL        reduce using rule 31 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    COMMA           reduce using rule 31 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    OR              reduce using rule 31 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    AND             reduce using rule 31 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    EXPONENT        shift and go to state 20


state 41

    (32) EXPRESSION -> EXPRESSION TIMES EXPRESSION .
    (27) EXPRESSION -> EXPRESSION . BITWISE_OR EXPRESSION
    (28) EXPRESSION -> EXPRESSION . BITWISE_AND EXPRESSION
    (29) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (30) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (31) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (32) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (33) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (34) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    BITWISE_OR      reduce using rule 32 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    BITWISE_AND     reduce using rule 32 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    MOD             reduce using rule 32 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    DIVIDE          reduce using rule 32 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    TIMES           reduce using rule 32 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    MINUS           reduce using rule 32 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    PLUS            reduce using rule 32 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    SEMI_COL        reduce using rule 32 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    RPAREN          reduce using rule 32 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    LESS_THAN       reduce using rule 32 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    LESS_THAN_EQ    reduce using rule 32 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    GREATER_THAN    reduce using rule 32 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    GREATER_THAN_EQ reduce using rule 32 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    IS_NOT_EQUAL    reduce using rule 32 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    IS_EQUAL        reduce using rule 32 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    COMMA           reduce using rule 32 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    OR              reduce using rule 32 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    AND             reduce using rule 32 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    EXPONENT        shift and go to state 20


state 42

    (33) EXPRESSION -> EXPRESSION MINUS EXPRESSION .
    (27) EXPRESSION -> EXPRESSION . BITWISE_OR EXPRESSION
    (28) EXPRESSION -> EXPRESSION . BITWISE_AND EXPRESSION
    (29) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (30) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (31) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (32) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (33) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (34) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    BITWISE_OR      reduce using rule 33 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    BITWISE_AND     reduce using rule 33 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    MINUS           reduce using rule 33 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    PLUS            reduce using rule 33 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    SEMI_COL        reduce using rule 33 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    RPAREN          reduce using rule 33 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    LESS_THAN       reduce using rule 33 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    LESS_THAN_EQ    reduce using rule 33 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    GREATER_THAN    reduce using rule 33 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    GREATER_THAN_EQ reduce using rule 33 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    IS_NOT_EQUAL    reduce using rule 33 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    IS_EQUAL        reduce using rule 33 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    COMMA           reduce using rule 33 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    OR              reduce using rule 33 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    AND             reduce using rule 33 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    EXPONENT        shift and go to state 20
    MOD             shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23


state 43

    (34) EXPRESSION -> EXPRESSION PLUS EXPRESSION .
    (27) EXPRESSION -> EXPRESSION . BITWISE_OR EXPRESSION
    (28) EXPRESSION -> EXPRESSION . BITWISE_AND EXPRESSION
    (29) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (30) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (31) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (32) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (33) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (34) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    BITWISE_OR      reduce using rule 34 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    BITWISE_AND     reduce using rule 34 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    MINUS           reduce using rule 34 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    PLUS            reduce using rule 34 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    SEMI_COL        reduce using rule 34 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    RPAREN          reduce using rule 34 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    LESS_THAN       reduce using rule 34 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    LESS_THAN_EQ    reduce using rule 34 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    GREATER_THAN    reduce using rule 34 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    GREATER_THAN_EQ reduce using rule 34 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    IS_NOT_EQUAL    reduce using rule 34 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    IS_EQUAL        reduce using rule 34 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    COMMA           reduce using rule 34 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    OR              reduce using rule 34 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    AND             reduce using rule 34 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    EXPONENT        shift and go to state 20
    MOD             shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23


state 44

    (47) BOOL_EXPRESSION -> LPAREN . BOOL_EXPRESSION RPAREN
    (36) EXPRESSION -> LPAREN . EXPRESSION RPAREN
    (39) BOOL_EXPRESSION -> . BOOL_EXPRESSION OR BOOL_EXPRESSION
    (40) BOOL_EXPRESSION -> . BOOL_EXPRESSION AND BOOL_EXPRESSION
    (41) BOOL_EXPRESSION -> . EXPRESSION LESS_THAN EXPRESSION
    (42) BOOL_EXPRESSION -> . EXPRESSION LESS_THAN_EQ EXPRESSION
    (43) BOOL_EXPRESSION -> . EXPRESSION GREATER_THAN EXPRESSION
    (44) BOOL_EXPRESSION -> . EXPRESSION GREATER_THAN_EQ EXPRESSION
    (45) BOOL_EXPRESSION -> . EXPRESSION IS_NOT_EQUAL EXPRESSION
    (46) BOOL_EXPRESSION -> . EXPRESSION IS_EQUAL EXPRESSION
    (47) BOOL_EXPRESSION -> . LPAREN BOOL_EXPRESSION RPAREN
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    LPAREN          shift and go to state 44
    MINUS           shift and go to state 13
    ID              shift and go to state 29
    NUMBER          shift and go to state 15

    BOOL_EXPRESSION                shift and go to state 56
    EXPRESSION                     shift and go to state 57

state 45

    (11) CONDITIONAL -> IF LPAREN error . RPAREN LCURLY STATEMENT_LIST RCURLY
    (12) CONDITIONAL -> IF LPAREN error . LCURLY STATEMENT_LIST RCURLY
    RPAREN          shift and go to state 58
    LCURLY          shift and go to state 59


state 46

    (14) CONDITIONAL -> IF LPAREN BOOL_EXPRESSION . RPAREN LCURLY STATEMENT_LIST RCURLY ELSE CONDITIONAL
    (15) CONDITIONAL -> IF LPAREN BOOL_EXPRESSION . RPAREN LCURLY STATEMENT_LIST RCURLY ELSE LCURLY STATEMENT_LIST RCURLY
    (16) CONDITIONAL -> IF LPAREN BOOL_EXPRESSION . RPAREN LCURLY STATEMENT_LIST RCURLY
    (39) BOOL_EXPRESSION -> BOOL_EXPRESSION . OR BOOL_EXPRESSION
    (40) BOOL_EXPRESSION -> BOOL_EXPRESSION . AND BOOL_EXPRESSION
    RPAREN          shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62


state 47

    (41) BOOL_EXPRESSION -> EXPRESSION . LESS_THAN EXPRESSION
    (42) BOOL_EXPRESSION -> EXPRESSION . LESS_THAN_EQ EXPRESSION
    (43) BOOL_EXPRESSION -> EXPRESSION . GREATER_THAN EXPRESSION
    (44) BOOL_EXPRESSION -> EXPRESSION . GREATER_THAN_EQ EXPRESSION
    (45) BOOL_EXPRESSION -> EXPRESSION . IS_NOT_EQUAL EXPRESSION
    (46) BOOL_EXPRESSION -> EXPRESSION . IS_EQUAL EXPRESSION
    (27) EXPRESSION -> EXPRESSION . BITWISE_OR EXPRESSION
    (28) EXPRESSION -> EXPRESSION . BITWISE_AND EXPRESSION
    (29) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (30) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (31) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (32) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (33) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (34) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    LESS_THAN       shift and go to state 63
    LESS_THAN_EQ    shift and go to state 64
    GREATER_THAN    shift and go to state 65
    GREATER_THAN_EQ shift and go to state 66
    IS_NOT_EQUAL    shift and go to state 67
    IS_EQUAL        shift and go to state 68
    BITWISE_OR      shift and go to state 18
    BITWISE_AND     shift and go to state 19
    EXPONENT        shift and go to state 20
    MOD             shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MINUS           shift and go to state 24
    PLUS            shift and go to state 25


state 48

    (13) CONDITIONAL -> IF error SEMI_COL .
    SEMI_COL        reduce using rule 13 (CONDITIONAL -> IF error SEMI_COL .)


state 49

    (36) EXPRESSION -> LPAREN EXPRESSION RPAREN .
    BITWISE_OR      reduce using rule 36 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)
    BITWISE_AND     reduce using rule 36 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)
    EXPONENT        reduce using rule 36 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)
    MOD             reduce using rule 36 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)
    DIVIDE          reduce using rule 36 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)
    TIMES           reduce using rule 36 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)
    MINUS           reduce using rule 36 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)
    PLUS            reduce using rule 36 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)
    SEMI_COL        reduce using rule 36 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)
    RPAREN          reduce using rule 36 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)
    LESS_THAN       reduce using rule 36 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)
    LESS_THAN_EQ    reduce using rule 36 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)
    GREATER_THAN    reduce using rule 36 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)
    GREATER_THAN_EQ reduce using rule 36 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)
    IS_NOT_EQUAL    reduce using rule 36 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)
    IS_EQUAL        reduce using rule 36 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)
    COMMA           reduce using rule 36 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)
    OR              reduce using rule 36 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)
    AND             reduce using rule 36 (EXPRESSION -> LPAREN EXPRESSION RPAREN .)


state 50

    (10) LOOP -> WHILE LPAREN EXPRESSION . RPAREN LCURLY STATEMENT_LIST RCURLY
    (27) EXPRESSION -> EXPRESSION . BITWISE_OR EXPRESSION
    (28) EXPRESSION -> EXPRESSION . BITWISE_AND EXPRESSION
    (29) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (30) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (31) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (32) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (33) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (34) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    RPAREN          shift and go to state 69
    BITWISE_OR      shift and go to state 18
    BITWISE_AND     shift and go to state 19
    EXPONENT        shift and go to state 20
    MOD             shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MINUS           shift and go to state 24
    PLUS            shift and go to state 25


state 51

    (8) ASSIGNMENT -> ID ASSIGN EXPRESSION . COMMA ASSIGNMENT
    (9) ASSIGNMENT -> ID ASSIGN EXPRESSION .
    (27) EXPRESSION -> EXPRESSION . BITWISE_OR EXPRESSION
    (28) EXPRESSION -> EXPRESSION . BITWISE_AND EXPRESSION
    (29) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (30) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (31) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (32) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (33) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (34) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    COMMA           shift and go to state 70
    SEMI_COL        reduce using rule 9 (ASSIGNMENT -> ID ASSIGN EXPRESSION .)
    BITWISE_OR      shift and go to state 18
    BITWISE_AND     shift and go to state 19
    EXPONENT        shift and go to state 20
    MOD             shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MINUS           shift and go to state 24
    PLUS            shift and go to state 25


state 52

    (23) FUNCTION_CALL -> ID LPAREN VALUE_LIST . RPAREN
    RPAREN          shift and go to state 71


state 53

    (24) VALUE_LIST -> EXPRESSION . COMMA VALUE_LIST
    (25) VALUE_LIST -> EXPRESSION .
    (27) EXPRESSION -> EXPRESSION . BITWISE_OR EXPRESSION
    (28) EXPRESSION -> EXPRESSION . BITWISE_AND EXPRESSION
    (29) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (30) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (31) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (32) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (33) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (34) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    COMMA           shift and go to state 72
    RPAREN          reduce using rule 25 (VALUE_LIST -> EXPRESSION .)
    BITWISE_OR      shift and go to state 18
    BITWISE_AND     shift and go to state 19
    EXPONENT        shift and go to state 20
    MOD             shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MINUS           shift and go to state 24
    PLUS            shift and go to state 25


state 54

    (26) VALUE_LIST -> EMPTY .
    RPAREN          reduce using rule 26 (VALUE_LIST -> EMPTY .)


state 55

    (19) FUNCTION_DEFINITION -> FUNCTION ID LPAREN . PARAM_LIST RPAREN LCURLY STATEMENT_LIST RCURLY
    (20) PARAM_LIST -> . ID COMMA PARAM_LIST
    (21) PARAM_LIST -> . ID
    (22) PARAM_LIST -> . EMPTY
    (48) EMPTY -> .
    ID              shift and go to state 73
    RPAREN          reduce using rule 48 (EMPTY -> .)

    PARAM_LIST                     shift and go to state 74
    EMPTY                          shift and go to state 75

state 56

    (47) BOOL_EXPRESSION -> LPAREN BOOL_EXPRESSION . RPAREN
    (39) BOOL_EXPRESSION -> BOOL_EXPRESSION . OR BOOL_EXPRESSION
    (40) BOOL_EXPRESSION -> BOOL_EXPRESSION . AND BOOL_EXPRESSION
    RPAREN          shift and go to state 76
    OR              shift and go to state 61
    AND             shift and go to state 62


state 57

    (36) EXPRESSION -> LPAREN EXPRESSION . RPAREN
    (41) BOOL_EXPRESSION -> EXPRESSION . LESS_THAN EXPRESSION
    (42) BOOL_EXPRESSION -> EXPRESSION . LESS_THAN_EQ EXPRESSION
    (43) BOOL_EXPRESSION -> EXPRESSION . GREATER_THAN EXPRESSION
    (44) BOOL_EXPRESSION -> EXPRESSION . GREATER_THAN_EQ EXPRESSION
    (45) BOOL_EXPRESSION -> EXPRESSION . IS_NOT_EQUAL EXPRESSION
    (46) BOOL_EXPRESSION -> EXPRESSION . IS_EQUAL EXPRESSION
    (27) EXPRESSION -> EXPRESSION . BITWISE_OR EXPRESSION
    (28) EXPRESSION -> EXPRESSION . BITWISE_AND EXPRESSION
    (29) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (30) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (31) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (32) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (33) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (34) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    RPAREN          shift and go to state 49
    LESS_THAN       shift and go to state 63
    LESS_THAN_EQ    shift and go to state 64
    GREATER_THAN    shift and go to state 65
    GREATER_THAN_EQ shift and go to state 66
    IS_NOT_EQUAL    shift and go to state 67
    IS_EQUAL        shift and go to state 68
    BITWISE_OR      shift and go to state 18
    BITWISE_AND     shift and go to state 19
    EXPONENT        shift and go to state 20
    MOD             shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MINUS           shift and go to state 24
    PLUS            shift and go to state 25


state 58

    (11) CONDITIONAL -> IF LPAREN error RPAREN . LCURLY STATEMENT_LIST RCURLY
    LCURLY          shift and go to state 77


state 59

    (12) CONDITIONAL -> IF LPAREN error LCURLY . STATEMENT_LIST RCURLY
    (1) STATEMENT_LIST -> . STATEMENT SEMI_COL
    (2) STATEMENT_LIST -> . STATEMENT SEMI_COL STATEMENT_LIST
    (3) STATEMENT -> . FUNCTIONAL
    (4) STATEMENT -> . CONDITIONAL
    (5) STATEMENT -> . LOOP
    (6) STATEMENT -> . EXPRESSION
    (7) STATEMENT -> . ASSIGNMENT
    (17) FUNCTIONAL -> . FUNCTION_CALL
    (18) FUNCTIONAL -> . FUNCTION_DEFINITION
    (11) CONDITIONAL -> . IF LPAREN error RPAREN LCURLY STATEMENT_LIST RCURLY
    (12) CONDITIONAL -> . IF LPAREN error LCURLY STATEMENT_LIST RCURLY
    (13) CONDITIONAL -> . IF error SEMI_COL
    (14) CONDITIONAL -> . IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE CONDITIONAL
    (15) CONDITIONAL -> . IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE LCURLY STATEMENT_LIST RCURLY
    (16) CONDITIONAL -> . IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY
    (10) LOOP -> . WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    (8) ASSIGNMENT -> . ID ASSIGN EXPRESSION COMMA ASSIGNMENT
    (9) ASSIGNMENT -> . ID ASSIGN EXPRESSION
    (23) FUNCTION_CALL -> . ID LPAREN VALUE_LIST RPAREN
    (19) FUNCTION_DEFINITION -> . FUNCTION ID LPAREN PARAM_LIST RPAREN LCURLY STATEMENT_LIST RCURLY
    IF              shift and go to state 10
    WHILE           shift and go to state 12
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 11
    ID              shift and go to state 14
    NUMBER          shift and go to state 15
    FUNCTION        shift and go to state 16

    STATEMENT_LIST                 shift and go to state 78
    STATEMENT                      shift and go to state 2
    FUNCTIONAL                     shift and go to state 3
    CONDITIONAL                    shift and go to state 4
    LOOP                           shift and go to state 5
    EXPRESSION                     shift and go to state 6
    ASSIGNMENT                     shift and go to state 7
    FUNCTION_CALL                  shift and go to state 8
    FUNCTION_DEFINITION            shift and go to state 9

state 60

    (14) CONDITIONAL -> IF LPAREN BOOL_EXPRESSION RPAREN . LCURLY STATEMENT_LIST RCURLY ELSE CONDITIONAL
    (15) CONDITIONAL -> IF LPAREN BOOL_EXPRESSION RPAREN . LCURLY STATEMENT_LIST RCURLY ELSE LCURLY STATEMENT_LIST RCURLY
    (16) CONDITIONAL -> IF LPAREN BOOL_EXPRESSION RPAREN . LCURLY STATEMENT_LIST RCURLY
    LCURLY          shift and go to state 79


state 61

    (39) BOOL_EXPRESSION -> BOOL_EXPRESSION OR . BOOL_EXPRESSION
    (39) BOOL_EXPRESSION -> . BOOL_EXPRESSION OR BOOL_EXPRESSION
    (40) BOOL_EXPRESSION -> . BOOL_EXPRESSION AND BOOL_EXPRESSION
    (41) BOOL_EXPRESSION -> . EXPRESSION LESS_THAN EXPRESSION
    (42) BOOL_EXPRESSION -> . EXPRESSION LESS_THAN_EQ EXPRESSION
    (43) BOOL_EXPRESSION -> . EXPRESSION GREATER_THAN EXPRESSION
    (44) BOOL_EXPRESSION -> . EXPRESSION GREATER_THAN_EQ EXPRESSION
    (45) BOOL_EXPRESSION -> . EXPRESSION IS_NOT_EQUAL EXPRESSION
    (46) BOOL_EXPRESSION -> . EXPRESSION IS_EQUAL EXPRESSION
    (47) BOOL_EXPRESSION -> . LPAREN BOOL_EXPRESSION RPAREN
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    LPAREN          shift and go to state 44
    MINUS           shift and go to state 13
    ID              shift and go to state 29
    NUMBER          shift and go to state 15

    BOOL_EXPRESSION                shift and go to state 80
    EXPRESSION                     shift and go to state 47

state 62

    (40) BOOL_EXPRESSION -> BOOL_EXPRESSION AND . BOOL_EXPRESSION
    (39) BOOL_EXPRESSION -> . BOOL_EXPRESSION OR BOOL_EXPRESSION
    (40) BOOL_EXPRESSION -> . BOOL_EXPRESSION AND BOOL_EXPRESSION
    (41) BOOL_EXPRESSION -> . EXPRESSION LESS_THAN EXPRESSION
    (42) BOOL_EXPRESSION -> . EXPRESSION LESS_THAN_EQ EXPRESSION
    (43) BOOL_EXPRESSION -> . EXPRESSION GREATER_THAN EXPRESSION
    (44) BOOL_EXPRESSION -> . EXPRESSION GREATER_THAN_EQ EXPRESSION
    (45) BOOL_EXPRESSION -> . EXPRESSION IS_NOT_EQUAL EXPRESSION
    (46) BOOL_EXPRESSION -> . EXPRESSION IS_EQUAL EXPRESSION
    (47) BOOL_EXPRESSION -> . LPAREN BOOL_EXPRESSION RPAREN
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    LPAREN          shift and go to state 44
    MINUS           shift and go to state 13
    ID              shift and go to state 29
    NUMBER          shift and go to state 15

    BOOL_EXPRESSION                shift and go to state 81
    EXPRESSION                     shift and go to state 47

state 63

    (41) BOOL_EXPRESSION -> EXPRESSION LESS_THAN . EXPRESSION
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 15

    EXPRESSION                     shift and go to state 82

state 64

    (42) BOOL_EXPRESSION -> EXPRESSION LESS_THAN_EQ . EXPRESSION
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 15

    EXPRESSION                     shift and go to state 83

state 65

    (43) BOOL_EXPRESSION -> EXPRESSION GREATER_THAN . EXPRESSION
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 15

    EXPRESSION                     shift and go to state 84

state 66

    (44) BOOL_EXPRESSION -> EXPRESSION GREATER_THAN_EQ . EXPRESSION
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 15

    EXPRESSION                     shift and go to state 85

state 67

    (45) BOOL_EXPRESSION -> EXPRESSION IS_NOT_EQUAL . EXPRESSION
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 15

    EXPRESSION                     shift and go to state 86

state 68

    (46) BOOL_EXPRESSION -> EXPRESSION IS_EQUAL . EXPRESSION
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 15

    EXPRESSION                     shift and go to state 87

state 69

    (10) LOOP -> WHILE LPAREN EXPRESSION RPAREN . LCURLY STATEMENT_LIST RCURLY
    LCURLY          shift and go to state 88


state 70

    (8) ASSIGNMENT -> ID ASSIGN EXPRESSION COMMA . ASSIGNMENT
    (8) ASSIGNMENT -> . ID ASSIGN EXPRESSION COMMA ASSIGNMENT
    (9) ASSIGNMENT -> . ID ASSIGN EXPRESSION
    ID              shift and go to state 89

    ASSIGNMENT                     shift and go to state 90

state 71

    (23) FUNCTION_CALL -> ID LPAREN VALUE_LIST RPAREN .
    SEMI_COL        reduce using rule 23 (FUNCTION_CALL -> ID LPAREN VALUE_LIST RPAREN .)


state 72

    (24) VALUE_LIST -> EXPRESSION COMMA . VALUE_LIST
    (24) VALUE_LIST -> . EXPRESSION COMMA VALUE_LIST
    (25) VALUE_LIST -> . EXPRESSION
    (26) VALUE_LIST -> . EMPTY
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    (48) EMPTY -> .
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 15
    RPAREN          reduce using rule 48 (EMPTY -> .)

    EXPRESSION                     shift and go to state 53
    VALUE_LIST                     shift and go to state 91
    EMPTY                          shift and go to state 54

state 73

    (20) PARAM_LIST -> ID . COMMA PARAM_LIST
    (21) PARAM_LIST -> ID .
    COMMA           shift and go to state 92
    RPAREN          reduce using rule 21 (PARAM_LIST -> ID .)


state 74

    (19) FUNCTION_DEFINITION -> FUNCTION ID LPAREN PARAM_LIST . RPAREN LCURLY STATEMENT_LIST RCURLY
    RPAREN          shift and go to state 93


state 75

    (22) PARAM_LIST -> EMPTY .
    RPAREN          reduce using rule 22 (PARAM_LIST -> EMPTY .)


state 76

    (47) BOOL_EXPRESSION -> LPAREN BOOL_EXPRESSION RPAREN .
    RPAREN          reduce using rule 47 (BOOL_EXPRESSION -> LPAREN BOOL_EXPRESSION RPAREN .)
    OR              reduce using rule 47 (BOOL_EXPRESSION -> LPAREN BOOL_EXPRESSION RPAREN .)
    AND             reduce using rule 47 (BOOL_EXPRESSION -> LPAREN BOOL_EXPRESSION RPAREN .)


state 77

    (11) CONDITIONAL -> IF LPAREN error RPAREN LCURLY . STATEMENT_LIST RCURLY
    (1) STATEMENT_LIST -> . STATEMENT SEMI_COL
    (2) STATEMENT_LIST -> . STATEMENT SEMI_COL STATEMENT_LIST
    (3) STATEMENT -> . FUNCTIONAL
    (4) STATEMENT -> . CONDITIONAL
    (5) STATEMENT -> . LOOP
    (6) STATEMENT -> . EXPRESSION
    (7) STATEMENT -> . ASSIGNMENT
    (17) FUNCTIONAL -> . FUNCTION_CALL
    (18) FUNCTIONAL -> . FUNCTION_DEFINITION
    (11) CONDITIONAL -> . IF LPAREN error RPAREN LCURLY STATEMENT_LIST RCURLY
    (12) CONDITIONAL -> . IF LPAREN error LCURLY STATEMENT_LIST RCURLY
    (13) CONDITIONAL -> . IF error SEMI_COL
    (14) CONDITIONAL -> . IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE CONDITIONAL
    (15) CONDITIONAL -> . IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE LCURLY STATEMENT_LIST RCURLY
    (16) CONDITIONAL -> . IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY
    (10) LOOP -> . WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    (8) ASSIGNMENT -> . ID ASSIGN EXPRESSION COMMA ASSIGNMENT
    (9) ASSIGNMENT -> . ID ASSIGN EXPRESSION
    (23) FUNCTION_CALL -> . ID LPAREN VALUE_LIST RPAREN
    (19) FUNCTION_DEFINITION -> . FUNCTION ID LPAREN PARAM_LIST RPAREN LCURLY STATEMENT_LIST RCURLY
    IF              shift and go to state 10
    WHILE           shift and go to state 12
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 11
    ID              shift and go to state 14
    NUMBER          shift and go to state 15
    FUNCTION        shift and go to state 16

    STATEMENT_LIST                 shift and go to state 94
    STATEMENT                      shift and go to state 2
    FUNCTIONAL                     shift and go to state 3
    CONDITIONAL                    shift and go to state 4
    LOOP                           shift and go to state 5
    EXPRESSION                     shift and go to state 6
    ASSIGNMENT                     shift and go to state 7
    FUNCTION_CALL                  shift and go to state 8
    FUNCTION_DEFINITION            shift and go to state 9

state 78

    (12) CONDITIONAL -> IF LPAREN error LCURLY STATEMENT_LIST . RCURLY
    RCURLY          shift and go to state 95


state 79

    (14) CONDITIONAL -> IF LPAREN BOOL_EXPRESSION RPAREN LCURLY . STATEMENT_LIST RCURLY ELSE CONDITIONAL
    (15) CONDITIONAL -> IF LPAREN BOOL_EXPRESSION RPAREN LCURLY . STATEMENT_LIST RCURLY ELSE LCURLY STATEMENT_LIST RCURLY
    (16) CONDITIONAL -> IF LPAREN BOOL_EXPRESSION RPAREN LCURLY . STATEMENT_LIST RCURLY
    (1) STATEMENT_LIST -> . STATEMENT SEMI_COL
    (2) STATEMENT_LIST -> . STATEMENT SEMI_COL STATEMENT_LIST
    (3) STATEMENT -> . FUNCTIONAL
    (4) STATEMENT -> . CONDITIONAL
    (5) STATEMENT -> . LOOP
    (6) STATEMENT -> . EXPRESSION
    (7) STATEMENT -> . ASSIGNMENT
    (17) FUNCTIONAL -> . FUNCTION_CALL
    (18) FUNCTIONAL -> . FUNCTION_DEFINITION
    (11) CONDITIONAL -> . IF LPAREN error RPAREN LCURLY STATEMENT_LIST RCURLY
    (12) CONDITIONAL -> . IF LPAREN error LCURLY STATEMENT_LIST RCURLY
    (13) CONDITIONAL -> . IF error SEMI_COL
    (14) CONDITIONAL -> . IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE CONDITIONAL
    (15) CONDITIONAL -> . IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE LCURLY STATEMENT_LIST RCURLY
    (16) CONDITIONAL -> . IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY
    (10) LOOP -> . WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    (8) ASSIGNMENT -> . ID ASSIGN EXPRESSION COMMA ASSIGNMENT
    (9) ASSIGNMENT -> . ID ASSIGN EXPRESSION
    (23) FUNCTION_CALL -> . ID LPAREN VALUE_LIST RPAREN
    (19) FUNCTION_DEFINITION -> . FUNCTION ID LPAREN PARAM_LIST RPAREN LCURLY STATEMENT_LIST RCURLY
    IF              shift and go to state 10
    WHILE           shift and go to state 12
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 11
    ID              shift and go to state 14
    NUMBER          shift and go to state 15
    FUNCTION        shift and go to state 16

    STATEMENT_LIST                 shift and go to state 96
    CONDITIONAL                    shift and go to state 4
    STATEMENT                      shift and go to state 2
    FUNCTIONAL                     shift and go to state 3
    LOOP                           shift and go to state 5
    EXPRESSION                     shift and go to state 6
    ASSIGNMENT                     shift and go to state 7
    FUNCTION_CALL                  shift and go to state 8
    FUNCTION_DEFINITION            shift and go to state 9

state 80

    (39) BOOL_EXPRESSION -> BOOL_EXPRESSION OR BOOL_EXPRESSION .
    (39) BOOL_EXPRESSION -> BOOL_EXPRESSION . OR BOOL_EXPRESSION
    (40) BOOL_EXPRESSION -> BOOL_EXPRESSION . AND BOOL_EXPRESSION
    RPAREN          reduce using rule 39 (BOOL_EXPRESSION -> BOOL_EXPRESSION OR BOOL_EXPRESSION .)
    OR              reduce using rule 39 (BOOL_EXPRESSION -> BOOL_EXPRESSION OR BOOL_EXPRESSION .)
    AND             shift and go to state 62


state 81

    (40) BOOL_EXPRESSION -> BOOL_EXPRESSION AND BOOL_EXPRESSION .
    (39) BOOL_EXPRESSION -> BOOL_EXPRESSION . OR BOOL_EXPRESSION
    (40) BOOL_EXPRESSION -> BOOL_EXPRESSION . AND BOOL_EXPRESSION
    RPAREN          reduce using rule 40 (BOOL_EXPRESSION -> BOOL_EXPRESSION AND BOOL_EXPRESSION .)
    OR              reduce using rule 40 (BOOL_EXPRESSION -> BOOL_EXPRESSION AND BOOL_EXPRESSION .)
    AND             reduce using rule 40 (BOOL_EXPRESSION -> BOOL_EXPRESSION AND BOOL_EXPRESSION .)


state 82

    (41) BOOL_EXPRESSION -> EXPRESSION LESS_THAN EXPRESSION .
    (27) EXPRESSION -> EXPRESSION . BITWISE_OR EXPRESSION
    (28) EXPRESSION -> EXPRESSION . BITWISE_AND EXPRESSION
    (29) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (30) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (31) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (32) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (33) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (34) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    RPAREN          reduce using rule 41 (BOOL_EXPRESSION -> EXPRESSION LESS_THAN EXPRESSION .)
    OR              reduce using rule 41 (BOOL_EXPRESSION -> EXPRESSION LESS_THAN EXPRESSION .)
    AND             reduce using rule 41 (BOOL_EXPRESSION -> EXPRESSION LESS_THAN EXPRESSION .)
    BITWISE_OR      shift and go to state 18
    BITWISE_AND     shift and go to state 19
    EXPONENT        shift and go to state 20
    MOD             shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MINUS           shift and go to state 24
    PLUS            shift and go to state 25


state 83

    (42) BOOL_EXPRESSION -> EXPRESSION LESS_THAN_EQ EXPRESSION .
    (27) EXPRESSION -> EXPRESSION . BITWISE_OR EXPRESSION
    (28) EXPRESSION -> EXPRESSION . BITWISE_AND EXPRESSION
    (29) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (30) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (31) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (32) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (33) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (34) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    RPAREN          reduce using rule 42 (BOOL_EXPRESSION -> EXPRESSION LESS_THAN_EQ EXPRESSION .)
    OR              reduce using rule 42 (BOOL_EXPRESSION -> EXPRESSION LESS_THAN_EQ EXPRESSION .)
    AND             reduce using rule 42 (BOOL_EXPRESSION -> EXPRESSION LESS_THAN_EQ EXPRESSION .)
    BITWISE_OR      shift and go to state 18
    BITWISE_AND     shift and go to state 19
    EXPONENT        shift and go to state 20
    MOD             shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MINUS           shift and go to state 24
    PLUS            shift and go to state 25


state 84

    (43) BOOL_EXPRESSION -> EXPRESSION GREATER_THAN EXPRESSION .
    (27) EXPRESSION -> EXPRESSION . BITWISE_OR EXPRESSION
    (28) EXPRESSION -> EXPRESSION . BITWISE_AND EXPRESSION
    (29) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (30) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (31) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (32) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (33) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (34) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    RPAREN          reduce using rule 43 (BOOL_EXPRESSION -> EXPRESSION GREATER_THAN EXPRESSION .)
    OR              reduce using rule 43 (BOOL_EXPRESSION -> EXPRESSION GREATER_THAN EXPRESSION .)
    AND             reduce using rule 43 (BOOL_EXPRESSION -> EXPRESSION GREATER_THAN EXPRESSION .)
    BITWISE_OR      shift and go to state 18
    BITWISE_AND     shift and go to state 19
    EXPONENT        shift and go to state 20
    MOD             shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MINUS           shift and go to state 24
    PLUS            shift and go to state 25


state 85

    (44) BOOL_EXPRESSION -> EXPRESSION GREATER_THAN_EQ EXPRESSION .
    (27) EXPRESSION -> EXPRESSION . BITWISE_OR EXPRESSION
    (28) EXPRESSION -> EXPRESSION . BITWISE_AND EXPRESSION
    (29) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (30) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (31) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (32) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (33) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (34) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    RPAREN          reduce using rule 44 (BOOL_EXPRESSION -> EXPRESSION GREATER_THAN_EQ EXPRESSION .)
    OR              reduce using rule 44 (BOOL_EXPRESSION -> EXPRESSION GREATER_THAN_EQ EXPRESSION .)
    AND             reduce using rule 44 (BOOL_EXPRESSION -> EXPRESSION GREATER_THAN_EQ EXPRESSION .)
    BITWISE_OR      shift and go to state 18
    BITWISE_AND     shift and go to state 19
    EXPONENT        shift and go to state 20
    MOD             shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MINUS           shift and go to state 24
    PLUS            shift and go to state 25


state 86

    (45) BOOL_EXPRESSION -> EXPRESSION IS_NOT_EQUAL EXPRESSION .
    (27) EXPRESSION -> EXPRESSION . BITWISE_OR EXPRESSION
    (28) EXPRESSION -> EXPRESSION . BITWISE_AND EXPRESSION
    (29) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (30) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (31) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (32) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (33) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (34) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    RPAREN          reduce using rule 45 (BOOL_EXPRESSION -> EXPRESSION IS_NOT_EQUAL EXPRESSION .)
    OR              reduce using rule 45 (BOOL_EXPRESSION -> EXPRESSION IS_NOT_EQUAL EXPRESSION .)
    AND             reduce using rule 45 (BOOL_EXPRESSION -> EXPRESSION IS_NOT_EQUAL EXPRESSION .)
    BITWISE_OR      shift and go to state 18
    BITWISE_AND     shift and go to state 19
    EXPONENT        shift and go to state 20
    MOD             shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MINUS           shift and go to state 24
    PLUS            shift and go to state 25


state 87

    (46) BOOL_EXPRESSION -> EXPRESSION IS_EQUAL EXPRESSION .
    (27) EXPRESSION -> EXPRESSION . BITWISE_OR EXPRESSION
    (28) EXPRESSION -> EXPRESSION . BITWISE_AND EXPRESSION
    (29) EXPRESSION -> EXPRESSION . EXPONENT EXPRESSION
    (30) EXPRESSION -> EXPRESSION . MOD EXPRESSION
    (31) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (32) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (33) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (34) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    RPAREN          reduce using rule 46 (BOOL_EXPRESSION -> EXPRESSION IS_EQUAL EXPRESSION .)
    OR              reduce using rule 46 (BOOL_EXPRESSION -> EXPRESSION IS_EQUAL EXPRESSION .)
    AND             reduce using rule 46 (BOOL_EXPRESSION -> EXPRESSION IS_EQUAL EXPRESSION .)
    BITWISE_OR      shift and go to state 18
    BITWISE_AND     shift and go to state 19
    EXPONENT        shift and go to state 20
    MOD             shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MINUS           shift and go to state 24
    PLUS            shift and go to state 25


state 88

    (10) LOOP -> WHILE LPAREN EXPRESSION RPAREN LCURLY . STATEMENT_LIST RCURLY
    (1) STATEMENT_LIST -> . STATEMENT SEMI_COL
    (2) STATEMENT_LIST -> . STATEMENT SEMI_COL STATEMENT_LIST
    (3) STATEMENT -> . FUNCTIONAL
    (4) STATEMENT -> . CONDITIONAL
    (5) STATEMENT -> . LOOP
    (6) STATEMENT -> . EXPRESSION
    (7) STATEMENT -> . ASSIGNMENT
    (17) FUNCTIONAL -> . FUNCTION_CALL
    (18) FUNCTIONAL -> . FUNCTION_DEFINITION
    (11) CONDITIONAL -> . IF LPAREN error RPAREN LCURLY STATEMENT_LIST RCURLY
    (12) CONDITIONAL -> . IF LPAREN error LCURLY STATEMENT_LIST RCURLY
    (13) CONDITIONAL -> . IF error SEMI_COL
    (14) CONDITIONAL -> . IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE CONDITIONAL
    (15) CONDITIONAL -> . IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE LCURLY STATEMENT_LIST RCURLY
    (16) CONDITIONAL -> . IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY
    (10) LOOP -> . WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    (8) ASSIGNMENT -> . ID ASSIGN EXPRESSION COMMA ASSIGNMENT
    (9) ASSIGNMENT -> . ID ASSIGN EXPRESSION
    (23) FUNCTION_CALL -> . ID LPAREN VALUE_LIST RPAREN
    (19) FUNCTION_DEFINITION -> . FUNCTION ID LPAREN PARAM_LIST RPAREN LCURLY STATEMENT_LIST RCURLY
    IF              shift and go to state 10
    WHILE           shift and go to state 12
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 11
    ID              shift and go to state 14
    NUMBER          shift and go to state 15
    FUNCTION        shift and go to state 16

    EXPRESSION                     shift and go to state 6
    STATEMENT_LIST                 shift and go to state 97
    STATEMENT                      shift and go to state 2
    FUNCTIONAL                     shift and go to state 3
    CONDITIONAL                    shift and go to state 4
    LOOP                           shift and go to state 5
    ASSIGNMENT                     shift and go to state 7
    FUNCTION_CALL                  shift and go to state 8
    FUNCTION_DEFINITION            shift and go to state 9

state 89

    (8) ASSIGNMENT -> ID . ASSIGN EXPRESSION COMMA ASSIGNMENT
    (9) ASSIGNMENT -> ID . ASSIGN EXPRESSION
    ASSIGN          shift and go to state 32


state 90

    (8) ASSIGNMENT -> ID ASSIGN EXPRESSION COMMA ASSIGNMENT .
    SEMI_COL        reduce using rule 8 (ASSIGNMENT -> ID ASSIGN EXPRESSION COMMA ASSIGNMENT .)


state 91

    (24) VALUE_LIST -> EXPRESSION COMMA VALUE_LIST .
    RPAREN          reduce using rule 24 (VALUE_LIST -> EXPRESSION COMMA VALUE_LIST .)


state 92

    (20) PARAM_LIST -> ID COMMA . PARAM_LIST
    (20) PARAM_LIST -> . ID COMMA PARAM_LIST
    (21) PARAM_LIST -> . ID
    (22) PARAM_LIST -> . EMPTY
    (48) EMPTY -> .
    ID              shift and go to state 73
    RPAREN          reduce using rule 48 (EMPTY -> .)

    PARAM_LIST                     shift and go to state 98
    EMPTY                          shift and go to state 75

state 93

    (19) FUNCTION_DEFINITION -> FUNCTION ID LPAREN PARAM_LIST RPAREN . LCURLY STATEMENT_LIST RCURLY
    LCURLY          shift and go to state 99


state 94

    (11) CONDITIONAL -> IF LPAREN error RPAREN LCURLY STATEMENT_LIST . RCURLY
    RCURLY          shift and go to state 100


state 95

    (12) CONDITIONAL -> IF LPAREN error LCURLY STATEMENT_LIST RCURLY .
    SEMI_COL        reduce using rule 12 (CONDITIONAL -> IF LPAREN error LCURLY STATEMENT_LIST RCURLY .)


state 96

    (14) CONDITIONAL -> IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST . RCURLY ELSE CONDITIONAL
    (15) CONDITIONAL -> IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST . RCURLY ELSE LCURLY STATEMENT_LIST RCURLY
    (16) CONDITIONAL -> IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST . RCURLY
    RCURLY          shift and go to state 101


state 97

    (10) LOOP -> WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENT_LIST . RCURLY
    RCURLY          shift and go to state 102


state 98

    (20) PARAM_LIST -> ID COMMA PARAM_LIST .
    RPAREN          reduce using rule 20 (PARAM_LIST -> ID COMMA PARAM_LIST .)


state 99

    (19) FUNCTION_DEFINITION -> FUNCTION ID LPAREN PARAM_LIST RPAREN LCURLY . STATEMENT_LIST RCURLY
    (1) STATEMENT_LIST -> . STATEMENT SEMI_COL
    (2) STATEMENT_LIST -> . STATEMENT SEMI_COL STATEMENT_LIST
    (3) STATEMENT -> . FUNCTIONAL
    (4) STATEMENT -> . CONDITIONAL
    (5) STATEMENT -> . LOOP
    (6) STATEMENT -> . EXPRESSION
    (7) STATEMENT -> . ASSIGNMENT
    (17) FUNCTIONAL -> . FUNCTION_CALL
    (18) FUNCTIONAL -> . FUNCTION_DEFINITION
    (11) CONDITIONAL -> . IF LPAREN error RPAREN LCURLY STATEMENT_LIST RCURLY
    (12) CONDITIONAL -> . IF LPAREN error LCURLY STATEMENT_LIST RCURLY
    (13) CONDITIONAL -> . IF error SEMI_COL
    (14) CONDITIONAL -> . IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE CONDITIONAL
    (15) CONDITIONAL -> . IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE LCURLY STATEMENT_LIST RCURLY
    (16) CONDITIONAL -> . IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY
    (10) LOOP -> . WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    (8) ASSIGNMENT -> . ID ASSIGN EXPRESSION COMMA ASSIGNMENT
    (9) ASSIGNMENT -> . ID ASSIGN EXPRESSION
    (23) FUNCTION_CALL -> . ID LPAREN VALUE_LIST RPAREN
    (19) FUNCTION_DEFINITION -> . FUNCTION ID LPAREN PARAM_LIST RPAREN LCURLY STATEMENT_LIST RCURLY
    IF              shift and go to state 10
    WHILE           shift and go to state 12
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 11
    ID              shift and go to state 14
    NUMBER          shift and go to state 15
    FUNCTION        shift and go to state 16

    STATEMENT_LIST                 shift and go to state 103
    STATEMENT                      shift and go to state 2
    FUNCTIONAL                     shift and go to state 3
    CONDITIONAL                    shift and go to state 4
    LOOP                           shift and go to state 5
    EXPRESSION                     shift and go to state 6
    ASSIGNMENT                     shift and go to state 7
    FUNCTION_CALL                  shift and go to state 8
    FUNCTION_DEFINITION            shift and go to state 9

state 100

    (11) CONDITIONAL -> IF LPAREN error RPAREN LCURLY STATEMENT_LIST RCURLY .
    SEMI_COL        reduce using rule 11 (CONDITIONAL -> IF LPAREN error RPAREN LCURLY STATEMENT_LIST RCURLY .)


state 101

    (14) CONDITIONAL -> IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY . ELSE CONDITIONAL
    (15) CONDITIONAL -> IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY . ELSE LCURLY STATEMENT_LIST RCURLY
    (16) CONDITIONAL -> IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY .
    ELSE            shift and go to state 104
    SEMI_COL        reduce using rule 16 (CONDITIONAL -> IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY .)


state 102

    (10) LOOP -> WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY .
    SEMI_COL        reduce using rule 10 (LOOP -> WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY .)


state 103

    (19) FUNCTION_DEFINITION -> FUNCTION ID LPAREN PARAM_LIST RPAREN LCURLY STATEMENT_LIST . RCURLY
    RCURLY          shift and go to state 105


state 104

    (14) CONDITIONAL -> IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE . CONDITIONAL
    (15) CONDITIONAL -> IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE . LCURLY STATEMENT_LIST RCURLY
    (11) CONDITIONAL -> . IF LPAREN error RPAREN LCURLY STATEMENT_LIST RCURLY
    (12) CONDITIONAL -> . IF LPAREN error LCURLY STATEMENT_LIST RCURLY
    (13) CONDITIONAL -> . IF error SEMI_COL
    (14) CONDITIONAL -> . IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE CONDITIONAL
    (15) CONDITIONAL -> . IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE LCURLY STATEMENT_LIST RCURLY
    (16) CONDITIONAL -> . IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY
    LCURLY          shift and go to state 106
    IF              shift and go to state 10

    CONDITIONAL                    shift and go to state 107

state 105

    (19) FUNCTION_DEFINITION -> FUNCTION ID LPAREN PARAM_LIST RPAREN LCURLY STATEMENT_LIST RCURLY .
    SEMI_COL        reduce using rule 19 (FUNCTION_DEFINITION -> FUNCTION ID LPAREN PARAM_LIST RPAREN LCURLY STATEMENT_LIST RCURLY .)


state 106

    (15) CONDITIONAL -> IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE LCURLY . STATEMENT_LIST RCURLY
    (1) STATEMENT_LIST -> . STATEMENT SEMI_COL
    (2) STATEMENT_LIST -> . STATEMENT SEMI_COL STATEMENT_LIST
    (3) STATEMENT -> . FUNCTIONAL
    (4) STATEMENT -> . CONDITIONAL
    (5) STATEMENT -> . LOOP
    (6) STATEMENT -> . EXPRESSION
    (7) STATEMENT -> . ASSIGNMENT
    (17) FUNCTIONAL -> . FUNCTION_CALL
    (18) FUNCTIONAL -> . FUNCTION_DEFINITION
    (11) CONDITIONAL -> . IF LPAREN error RPAREN LCURLY STATEMENT_LIST RCURLY
    (12) CONDITIONAL -> . IF LPAREN error LCURLY STATEMENT_LIST RCURLY
    (13) CONDITIONAL -> . IF error SEMI_COL
    (14) CONDITIONAL -> . IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE CONDITIONAL
    (15) CONDITIONAL -> . IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE LCURLY STATEMENT_LIST RCURLY
    (16) CONDITIONAL -> . IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY
    (10) LOOP -> . WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY
    (27) EXPRESSION -> . EXPRESSION BITWISE_OR EXPRESSION
    (28) EXPRESSION -> . EXPRESSION BITWISE_AND EXPRESSION
    (29) EXPRESSION -> . EXPRESSION EXPONENT EXPRESSION
    (30) EXPRESSION -> . EXPRESSION MOD EXPRESSION
    (31) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (32) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (33) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (34) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (35) EXPRESSION -> . MINUS EXPRESSION
    (36) EXPRESSION -> . LPAREN EXPRESSION RPAREN
    (37) EXPRESSION -> . ID
    (38) EXPRESSION -> . NUMBER
    (8) ASSIGNMENT -> . ID ASSIGN EXPRESSION COMMA ASSIGNMENT
    (9) ASSIGNMENT -> . ID ASSIGN EXPRESSION
    (23) FUNCTION_CALL -> . ID LPAREN VALUE_LIST RPAREN
    (19) FUNCTION_DEFINITION -> . FUNCTION ID LPAREN PARAM_LIST RPAREN LCURLY STATEMENT_LIST RCURLY
    IF              shift and go to state 10
    WHILE           shift and go to state 12
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 11
    ID              shift and go to state 14
    NUMBER          shift and go to state 15
    FUNCTION        shift and go to state 16

    STATEMENT_LIST                 shift and go to state 108
    STATEMENT                      shift and go to state 2
    FUNCTIONAL                     shift and go to state 3
    CONDITIONAL                    shift and go to state 4
    LOOP                           shift and go to state 5
    EXPRESSION                     shift and go to state 6
    ASSIGNMENT                     shift and go to state 7
    FUNCTION_CALL                  shift and go to state 8
    FUNCTION_DEFINITION            shift and go to state 9

state 107

    (14) CONDITIONAL -> IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE CONDITIONAL .
    SEMI_COL        reduce using rule 14 (CONDITIONAL -> IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE CONDITIONAL .)


state 108

    (15) CONDITIONAL -> IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE LCURLY STATEMENT_LIST . RCURLY
    RCURLY          shift and go to state 109


state 109

    (15) CONDITIONAL -> IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE LCURLY STATEMENT_LIST RCURLY .
    SEMI_COL        reduce using rule 15 (CONDITIONAL -> IF LPAREN BOOL_EXPRESSION RPAREN LCURLY STATEMENT_LIST RCURLY ELSE LCURLY STATEMENT_LIST RCURLY .)
